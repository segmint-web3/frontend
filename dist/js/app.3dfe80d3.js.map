{"version":3,"file":"js/app.3dfe80d3.js","mappings":"mEAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,QAAQ,CAAEJ,EAAIK,YAAaH,EAAG,iBAAiB,CAACE,MAAM,CAAC,QAAUJ,EAAIM,eAAeN,EAAIO,KAAKL,EAAG,kBAAkB,CAACE,MAAM,CAAC,WAAaJ,EAAIQ,WAAW,cAAgBR,EAAIS,cAAc,kBAAoBT,EAAIU,qBAAqBR,EAAG,kBAAkB,CAACE,MAAM,CAAC,cAAgBJ,EAAIS,iBAAmBT,EAAIW,mBAA6EX,EAAIO,KAA7DL,EAAG,MAAM,CAACU,YAAY,sBAAsB,CAACZ,EAAIa,GAAG,MAAe,EAC7d,EACIC,EAAkB,CAAC,WAAY,IAAId,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,KAAK,CAACF,EAAIe,GAAG,wBAAwBb,EAAG,MAAM,CAACU,YAAY,YAAY,CAACV,EAAG,OAAOA,EAAG,OAAOA,EAAG,OAAOA,EAAG,UAC7L,GCHIH,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACU,YAAY,kBAAkB,CAACV,EAAG,MAAM,CAACU,YAAY,QAAQ,CAACV,EAAG,MAAM,CAACU,YAAY,OAAOR,MAAM,CAAC,IAAO,GAAEJ,EAAIgB,2BAA2B,IAAM,UAAUd,EAAG,IAAI,CAACU,YAAY,+BAA+BR,MAAM,CAAC,KAAO,KAAKa,GAAG,CAAC,MAAQjB,EAAIkB,OAAOR,oBAAoB,CAACV,EAAIe,GAAGf,EAAImB,GAAGnB,EAAIS,cAAgB,YAAc,gBAAiBT,EAAIoB,OAAOC,MAAMC,SAASC,QAASrB,EAAG,IAAI,CAACU,YAAY,8BAA8BR,MAAM,CAAC,KAAO,KAAKa,GAAG,CAAC,MAAQjB,EAAIkB,OAAOV,aAAa,CAACR,EAAIe,GAAG,YAAYf,EAAIO,OAAOL,EAAG,MAAM,CAACU,YAAY,eAAe,CAACV,EAAG,OAAO,CAACF,EAAIe,GAAG,QAAQf,EAAImB,GAAGnB,EAAIwB,UAAUtB,EAAG,MAAM,CAACU,YAAY,QAAQV,EAAG,OAAO,CAACF,EAAIe,GAAGf,EAAImB,GAAGnB,EAAIyB,YAAY,wBAA0BzB,EAAIoB,OAAOC,MAAMC,SAASC,QAA4JrB,EAAG,MAAM,CAACU,YAAY,oBAAoB,CAACV,EAAG,MAAM,CAACU,YAAY,QAAQ,CAACV,EAAG,MAAM,CAACU,YAAY,WAAW,CAACZ,EAAIe,GAAGf,EAAImB,GAAGnB,EAAI0B,YAAYxB,EAAG,MAAM,CAACU,YAAY,SAAS,CAACZ,EAAIe,GAAGf,EAAImB,GAAGnB,EAAI2B,SAAS,cAAczB,EAAG,MAAM,CAACU,YAAY,OAAOR,MAAM,CAAC,IAAO,GAAEJ,EAAIgB,2BAA2B,IAAM,QAAQC,GAAG,CAAC,MAAQjB,EAAI4B,gBAAhd1B,EAAG,MAAM,CAACU,YAAY,kBAAkB,CAACV,EAAG,SAAS,CAACU,YAAY,yBAAyBK,GAAG,CAAC,MAAQjB,EAAI6B,UAAU,CAAC7B,EAAIe,GAAG,uBAC35B,EACID,EAAkB,GCuBtB,GACAgB,KAAA,kBACAC,OACA,OACAf,WAAAgB,aAEA,EACAC,MAAA,mDACAC,SAAA,CACAR,UACA,IAAAS,EAAA,KAAAf,OAAAC,MAAAC,SAAAC,QAAAa,SACA,OAAAD,EAAAE,MAAA,WAAAF,EAAAE,OAAA,EACA,EACAV,UACA,YAAAP,OAAAC,MAAAC,SAAAgB,YACA,EACAd,QACA,YAAAJ,OAAAC,MAAAC,SAAAE,KACA,EACAC,aACA,IAAAA,EAAAc,SAAA,KAAAnB,OAAAC,MAAAC,SAAAkB,kBAAA,KACA,OAAAf,EAAAgB,UACA,GAEAC,QAAA,CACAb,UACA,KAAAT,OAAAuB,SAAA,mBACA,EACAf,aACA,KAAAR,OAAAuB,SAAA,sBACA,ICvD+P,I,UCQ3PC,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIF,EAAeA,EAAiB,QCnB5B7C,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACU,YAAY,WAAW,CAACV,EAAG,gBAAgB,CAACE,MAAM,CAAC,KAAO,uBAAuB,QAAUJ,EAAI6C,gBAAgB3C,EAAG,cAAc,CAACE,MAAM,CAAC,KAAO,cAAc,MAAQJ,EAAI8C,cAAc,OAAS9C,EAAI+C,eAAe,EAAI/C,EAAIgD,gBAAgB,EAAIhD,EAAIiD,gBAAgB,UAAYjD,EAAIkD,oBAAoB,QAAUlD,EAAImD,mBAAmBlC,GAAG,CAAC,MAAQjB,EAAIoD,mBAAmBlD,EAAG,MAAM,CAACU,YAAY,mBAAmBK,GAAG,CAAC,MAAQjB,EAAIqD,MAAM,QAAUrD,EAAIsD,UAAU,WAAatD,EAAIuD,aAAa,UAAYvD,EAAIwD,YAAY,UAAYxD,EAAIyD,cAAc,CAACvD,EAAG,SAAS,CAACwD,IAAI,SAAS9C,YAAY,cAAcR,MAAM,CAAC,MAAQ,OAAO,OAAS,UAAUF,EAAG,SAAS,CAACwD,IAAI,YAAY9C,YAAY,aAAa+C,MAAO3D,EAAI4D,gBAAiBxD,MAAM,CAAC,MAAQ,OAAO,OAAS,UAAUF,EAAG,MAAM,CAACU,YAAY,cAAc+C,MAAO3D,EAAI6D,sBAAuB,CAAC7D,EAAIe,GAAG,IAAIf,EAAImB,GAAGnB,EAAI8D,yBAAyB,OAAO5D,EAAG,MAAM,CAACyD,MAAO3D,EAAI+D,sBAAuB,CAAC/D,EAAIe,GAAG,IAAIf,EAAImB,GAAGnB,EAAI8C,eAAe,IAAI9C,EAAImB,GAAGnB,EAAI+C,gBAAgB,OAAO7C,EAAG,MAAM,CAACyD,MAAO3D,EAAIgE,kBAAmBhE,EAAIiE,GAAIjE,EAAIkE,UAAU,SAASC,GAAM,OAAOjE,EAAG,MAAM,CAACkE,IAAID,EAAKE,OAAO,CAACnE,EAAG,MAAM,CAACyD,MAAO3D,EAAIsE,gBAAgBH,MAAU,IAAGjE,EAAG,OAAO,GAA6B,OAAzBD,KAAK+C,iBAA6B/C,KAAKsE,mBAA8HvE,EAAIO,KAA9GL,EAAG,SAAS,CAACU,YAAY,6BAA6BK,GAAG,CAAC,MAAQjB,EAAIwE,QAAQ,CAACxE,EAAIe,GAAG,qBAA8B,EACn5C,EACID,EAAkB,GCFlBf,G,QAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,QAAQ,CAACU,YAAY,cAAcR,MAAM,CAAC,KAAOJ,EAAIkB,OAAOY,KAAK,OAAS,QAAQb,GAAG,CAAC,eAAejB,EAAIyE,YAAY,cAAczE,EAAI0E,aAAa,CAACxE,EAAG,MAAM,CAACU,YAAY,sBAAsB,CAACV,EAAG,MAAM,CAACU,YAAY,sBAAsB,CAACZ,EAAIe,GAAG,IAAIf,EAAImB,GAAGnB,EAAI2E,YAAY,KAAKzE,EAAG,MAAM,CAACU,YAAY,QAAQR,MAAM,CAAC,IAAO,GAAEJ,EAAIgB,4BAA4B,IAAM,SAASC,GAAG,CAAC,MAAQ,SAAS2D,GAAQ,OAAO5E,EAAI6E,MAAM,QAAQ,OAAO3E,EAAG,MAAM,CAACU,YAAY,4BAA4B,CAAEZ,EAAI8E,gBAAiB5E,EAAG,MAAM,CAAC6E,YAAY,CAAC,mBAAmB,qBAAqB,SAAW,WAAW,KAAO,IAAI,MAAQ,IAAI,IAAM,IAAI,OAAS,OAAO/E,EAAIO,KAAOP,EAAIgF,aAA6I9E,EAAG,MAAM,CAACU,YAAY,gBAAgB,CAACZ,EAAIe,GAAG,wBAAwBf,EAAImB,GAAGlB,KAAKgF,OAAO,IAAIjF,EAAImB,GAAGlB,KAAKiF,QAAQ,iBAAhPhF,EAAG,MAAM,CAACU,YAAY,gBAAgB,CAACZ,EAAIe,GAAG,4BAA4Bf,EAAImB,GAAGlB,KAAKgF,OAAO,IAAIjF,EAAImB,GAAGlB,KAAKiF,QAAQ,UAA4IhF,EAAG,QAAQ,CAACU,YAAY,cAAcR,MAAM,CAAC,IAAM,sBAAsB,CAACF,EAAG,QAAQ,CAACwD,IAAI,OAAO9C,YAAY,aAAaR,MAAM,CAAC,KAAO,OAAO,SAAW,GAAG,KAAO,8BAA8B,GAAK,oBAAoB,OAAS,wBAAwBa,GAAG,CAAC,OAASjB,EAAImF,YAAYjF,EAAG,SAAS,CAACU,YAAY,sBAAsB,CAACZ,EAAIe,GAAG,oBAAoBb,EAAG,MAAM,CAACkF,WAAW,CAAC,CAACtD,KAAK,OAAOuD,QAAQ,SAASC,MAAOtF,EAAIgF,aAAcO,WAAW,iBAAiB3E,YAAY,kBAAkB+C,MAAO3D,EAAIwF,uBAAwB,CAACtF,EAAG,SAAS,CAACwD,IAAI,SAASC,MAAO3D,EAAIwF,sBAAuBpF,MAAM,CAAC,MAAQH,KAAKiB,OAAO+D,MAAM,OAAShF,KAAKiB,OAAOgE,YAAYhF,EAAG,MAAM,CAACkF,WAAW,CAAC,CAACtD,KAAK,OAAOuD,QAAQ,SAASC,MAAOtF,EAAIgF,aAAcO,WAAW,iBAAiB3E,YAAY,UAAU,CAACV,EAAG,QAAQ,CAACuF,MAAM,CAACC,SAA6B,UAAnB1F,EAAI2F,YAAwB1E,GAAG,CAAC,MAAQ,SAAS2D,GAAQ,OAAO5E,EAAI4F,cAAc,QAAQ,IAAI,CAAC1F,EAAG,MAAM,CAACF,EAAIe,GAAG,aAAab,EAAG,QAAQ,CAACuF,MAAM,CAACC,SAA6B,YAAnB1F,EAAI2F,YAA0B1E,GAAG,CAAC,MAAQ,SAAS2D,GAAQ,OAAO5E,EAAI4F,cAAc,UAAU,IAAI,CAAC1F,EAAG,MAAM,CAACF,EAAIe,GAAG,eAAeb,EAAG,QAAQ,CAACuF,MAAM,CAACC,SAA6B,SAAnB1F,EAAI2F,YAAuB1E,GAAG,CAAC,MAAQ,SAAS2D,GAAQ,OAAO5E,EAAI4F,cAAc,OAAO,IAAI,CAAC1F,EAAG,MAAM,CAACF,EAAIe,GAAG,cAAef,EAAIgF,aAAc9E,EAAG,OAAO,CAACA,EAAG,MAAM,CAACU,YAAY,oBAAoB,CAACV,EAAG,QAAQ,CAACE,MAAM,CAAC,IAAM,gBAAgB,CAACJ,EAAIe,GAAG,YAAYb,EAAG,QAAQ,CAACkF,WAAW,CAAC,CAACtD,KAAK,QAAQuD,QAAQ,UAAUC,MAAOtF,EAAI6F,YAAaN,WAAW,gBAAgB3E,YAAY,QAAQR,MAAM,CAAC,KAAO,OAAO,GAAK,cAAc,UAAY,QAAQ0F,SAAS,CAAC,MAAS9F,EAAI6F,aAAc5E,GAAG,CAAC,MAAQ,SAAS2D,GAAWA,EAAOmB,OAAOC,YAAiBhG,EAAI6F,YAAYjB,EAAOmB,OAAOT,MAAK,OAAOpF,EAAG,MAAM,CAACU,YAAY,aAAa,CAACV,EAAG,QAAQ,CAACE,MAAM,CAAC,IAAM,SAAS,CAACJ,EAAIe,GAAG,WAAWb,EAAG,QAAQ,CAACkF,WAAW,CAAC,CAACtD,KAAK,QAAQuD,QAAQ,UAAUC,MAAOtF,EAAIiG,KAAMV,WAAW,SAAS3E,YAAY,QAAQR,MAAM,CAAC,KAAO,OAAO,GAAK,OAAO,UAAY,QAAQ0F,SAAS,CAAC,MAAS9F,EAAIiG,MAAOhF,GAAG,CAAC,MAAQ,CAAC,SAAS2D,GAAWA,EAAOmB,OAAOC,YAAiBhG,EAAIiG,KAAKrB,EAAOmB,OAAOT,MAAK,EAAE,SAASV,GAAQ,OAAO5E,EAAIkG,UAAUtB,EAAO,QAAU5E,EAAImG,UAAkFnG,EAAIO,KAA3EL,EAAG,MAAM,CAACU,YAAY,SAAS,CAACZ,EAAIe,GAAG,gCAAyCb,EAAG,SAAS,CAACU,YAAY,iBAAiBK,GAAG,CAAC,MAAQjB,EAAIwE,QAAQ,CAACxE,EAAIe,GAAG,IAAIf,EAAImB,GAAGnB,EAAIkB,OAAOkF,GAAK,eAAkB,YAAWnG,KAAKoG,kBAAkB,SAASrG,EAAIO,KAAMP,EAAI8E,gBAAiB5E,EAAG,MAAM,CAACU,YAAY,qBAAqB,CAACV,EAAG,OAAO,CAACF,EAAIe,GAAGf,EAAImB,GAAGnB,EAAIkB,OAAOkF,GAAK,mBAAqB,wBAAwBlG,EAAG,MAAM,CAACU,YAAY,YAAY,CAACV,EAAG,OAAOA,EAAG,OAAOA,EAAG,OAAOA,EAAG,WAAWF,EAAIO,UACzjH,GACIO,EAAkB,G,oBCAtB,MAAMwF,EAAYC,MAAM,KAAaC,KAAK,KACnC,SAASC,IACd,OAAOH,CACT,CACO,SAASI,EAAwBC,GACtC,IAAIC,EAAS,GACb,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIC,EAAI,IAAIC,EAAAA,GAAGJ,EAAOG,EAAED,IACpBG,EAAI,IAAID,EAAAA,GAAGJ,EAAOK,EAAEH,IACpBI,EAAI,IAAIF,EAAAA,GAAGJ,EAAOM,EAAEJ,IAExB,IAAK,IAAIK,EAAI,EAAGA,EAAI,GAAIA,IAEtBN,EAAOO,KAAKL,EAAEM,KAAe,GAAT,EAAIF,IAAQG,IAAI,IAAIN,EAAAA,GAAG,MAAO,KAAKO,YACvDV,EAAOO,KAAKH,EAAEI,KAAe,GAAT,EAAIF,IAAQG,IAAI,IAAIN,EAAAA,GAAG,MAAO,KAAKO,YACvDV,EAAOO,KAAKF,EAAEG,KAAe,GAAT,EAAIF,IAAQG,IAAI,IAAIN,EAAAA,GAAG,MAAO,KAAKO,YACvDV,EAAOO,KAAK,IAEhB,CACA,OAAOP,CACT,CAEO,SAASW,EAAwBX,GACtC,MAAMY,EAAY,CAChBV,EAAG,GACHG,EAAG,GACHD,EAAG,IAEL,IAAK,IAAIH,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIC,EAAI,IAAIC,EAAAA,GAAG,IAAK,IAChBC,EAAI,IAAID,EAAAA,GAAG,IAAK,IAChBE,EAAI,IAAIF,EAAAA,GAAG,IAAK,IACpB,IAAK,IAAIG,EAAI,EAAGA,EAAI,GAAIA,IACtBJ,EAAIA,EAAEW,KAAW,IAANP,EAAU,EAAI,GAAGQ,GAAG,IAAIX,EAAAA,GAAGH,EAAY,EAAJM,EAAQ,EAAU,GAAJL,EAAS,GAAGpE,SAAS,IAAK,KACtFuE,EAAIA,EAAES,KAAY,IAANP,EAAU,EAAI,GAAGQ,GAAG,IAAIX,EAAAA,GAAGH,EAAY,EAAJM,EAAQ,EAAU,GAAJL,EAAS,GAAGpE,SAAS,IAAK,KACvFwE,EAAIA,EAAEQ,KAAY,IAANP,EAAU,EAAI,GAAGQ,GAAG,IAAIX,EAAAA,GAAGH,EAAY,EAAJM,EAAQ,EAAU,GAAJL,EAAS,GAAGpE,SAAS,IAAK,KAEzF+E,EAAUV,EAAEK,KAAKL,EAAErE,SAAS,KAC5B+E,EAAUR,EAAEG,KAAKH,EAAEvE,SAAS,KAC5B+E,EAAUP,EAAEE,KAAKF,EAAExE,SAAS,IAC9B,CACA,OAAO+E,CACT,C,uBCiBA,GACA1F,KAAA,aACAC,KAAA,WACA,OACA4F,MAAA,KACAhC,WAAA,QACAiC,aAAA,GACA9C,iBAAA,EACAe,YAAA,GACAI,KAAA,GACAjF,WAAAgB,aACAmE,WAAA,EAEA,EACAlE,MAAA,uEACAC,SAAA,CACA8C,aAAA,WACA,YAAA4C,aAAAC,OAAA,CACA,EACArC,sBAAA,WACA,YAAAtE,OAAA+D,MAAA,UAAA/D,OAAAgE,OAAA,IACA,CACA4C,OAAA,OACA7C,MAAA,QAAA/D,OAAA+D,UACAC,OAAA,QAAAhE,OAAAgE,YAEA,KAAAhE,OAAA+D,MAAA,SAAA/D,OAAAgE,OAAA,GACA,CACA4C,OAAA,OACA7C,MAAA,OAAA/D,OAAA+D,MAAA,KACAC,OAAA,OAAAhE,OAAAgE,OAAA,MAGA,CACA4C,OAAA,OACA7C,MAAA,OAAA/D,OAAA+D,MAAA,KACAC,OAAA,OAAAhE,OAAAgE,OAAA,KAEA,EACAP,aACA,YAAAK,aACA,KAAA9D,OAAAkF,GACA,UACA,UACA,oBACA,EACAC,eACA,OAAA9D,SAAA,KAAAnB,OAAAC,MAAAC,SAAAkB,mBAAA,KAAAtB,OAAA+D,MAAA,KAAA/D,OAAAgE,OAAA,UAAA6C,QAAA,EACA,GAEArF,QAAA,CACAkD,cAAAoC,GACA,KAAArC,WAAAqC,EACA,KAAAC,QACA,EACAA,SACA,MAAAC,EAAA,KAAAC,MAAAC,OAAAC,WAAA,MACAH,EAAAI,uBAAA,EACA,MAAArD,EAAA,KAAA/D,OAAA+D,MACAC,EAAA,KAAAhE,OAAAgE,OACAgD,EAAAK,UAAA,QACAL,EAAAM,SAAA,IAAAvD,EAAAC,GACA,MAAAuD,EAAA,GACAC,EAAAC,IAAAA,SAEA,IAAAC,EACA,oBAAAjD,WACAiD,EAAA,CACAC,OAAA,KAAAlB,MACAmB,SAAA7D,EACA8D,UAAA7D,EACA8D,SAAA/D,EAAA,EACAgE,UAAA/D,EAAA,EACAgE,cAAA,EACAC,OAAA,QACAC,QAAA,QAEA,kBAAAzD,WAAA,CACA,MAAA0D,EAAA,KAAA1B,MAAA1C,MAAA,KAAA0C,MAAAzC,OACAoE,EAAArE,EAAAC,EAEA0D,EADAU,EAAAD,EACA,CACAR,OAAA,KAAAlB,MACA1C,MAAAsE,KAAAC,MAAAtE,EAAAmE,GACAnE,OAAAA,EACAgE,cAAA,EACAC,OAAA,QACAC,QAAA,GAGA,CACAP,OAAA,KAAAlB,MACA1C,MAAAA,EACAC,OAAAqE,KAAAC,MAAAvE,EAAAoE,GACAH,cAAA,EACAC,OAAA,QACAC,QAAA,EAGA,MACAR,EAAA,CACAC,OAAA,KAAAlB,MACA1C,MAAAA,EACAC,OAAAA,EACAgE,cAAA,EACAC,OAAA,QACAC,QAAA,GAGAV,EAAAE,GAAAa,MAAAC,IACA,oBAAA/D,WAAA,CACA,MAAA0D,EAAAK,EAAAzE,MAAAyE,EAAAxE,OACA,IAAAyE,EAAAC,EACA3E,EAAAC,EAAAmE,GACAO,EAAA1E,EACAyE,EAAAC,EAAAP,IAEAM,EAAA1E,EACA2E,EAAAD,EAAAN,GAEA,MAAAnC,GAAAjC,EAAA0E,GAAA,EACA9C,GAAA3B,EAAA0E,GAAA,EACA1B,EAAA2B,UAAAH,EAAAxC,EAAAL,EAAA6C,EAAAzE,MAAAyE,EAAAxE,OACA,oBAAAS,WACA+D,EAAAzE,MAAAA,EACAiD,EAAA2B,UAAAH,GAAA,EAAAH,KAAAC,OAAAE,EAAAzE,MAAAA,GAAA,KAAAyE,EAAAzE,MAAAyE,EAAAxE,QAEAgD,EAAA2B,UAAAH,EAAA,KAAAH,KAAAC,OAAAE,EAAAxE,OAAAA,GAAA,GAAAwE,EAAAzE,MAAAyE,EAAAxE,QAGAgD,EAAA2B,UAAAH,EAAA,IAAAzE,EAAAC,GAGA,QAAA4E,EAAA,EAAAA,EAAA5E,EAAA,GAAA4E,IACA,QAAAC,EAAA,EAAAA,EAAA9E,EAAA,GAAA8E,IAAA,CACA,MAAAhI,EAAAmG,EAAA8B,aAAA,GAAAD,EAAA,GAAAD,EAAA,OACArB,EAAAtB,KAAAI,EAAAxF,EAAAA,MACA,CAEA,KAAA6F,aAAAa,CAAA,GAEA,EACAtD,WACA,MAAAuE,EAAA,IAAAO,MACAP,EAAAQ,OAAA,WACA,KAAAvC,MAAA+B,EACA,KAAAzB,QACA,EAAAkC,KAAA,MACAT,EAAAU,IAAAC,IAAAC,gBAAA,KAAAnC,MAAAoC,KAAAC,MAAA,GAEA,EACAhG,MAAAiG,GAEA,GADAA,EAAAC,iBACA,KAAA5F,gBACA,OAEA,MAAAe,EAAA,KAAAA,YACA8E,EAAA,KAAA1E,KACA2E,EAAA,oEACA,GAAAA,EAAAC,KAAAF,GAAA,CAEA,IAAAG,EADA,KAAA3E,WAAA,EAGA2E,EADA,KAAA5J,OAAAkF,GACA,KAAAhF,OAAAuB,SAAA,sBAAAyD,GAAA,KAAAlF,OAAAkF,GAAAc,EAAA,KAAAhG,OAAAgG,EAAAL,EAAA,KAAA3F,OAAA2F,EAAA5B,MAAA,KAAA/D,OAAA+D,MAAAC,OAAA,KAAAhE,OAAAgE,OAAAuD,MAAA,KAAAb,aAAA/B,cAAA8E,QAEA,KAAAvJ,OAAAuB,SAAA,uBAAAuE,EAAA,KAAAhG,OAAAgG,EAAAL,EAAA,KAAA3F,OAAA2F,EAAA5B,MAAA,KAAA/D,OAAA+D,MAAAC,OAAA,KAAAhE,OAAAgE,OAAAuD,MAAA,KAAAb,aAAA/B,cAAA8E,QAGAG,IACA,KAAAhG,iBAAA,EACAgG,EAAArB,MAAA,KACA,KAAA3E,iBAAA,EACA,KAAA5D,OAAA6J,WAAA,IACAC,OAAAC,IACAC,QAAAC,IAAAF,GACA,KAAAnG,iBAAA,EACA,KAAA5D,OAAAkF,IAAA,IAAA6E,EAAAG,OACAF,QAAAC,IAAA,YACA,KAAAE,QAAAJ,EAAAK,SACA,IAGA,MACA,KAAAnF,WAAA,CAEA,EACA1B,YAAAgG,GACA,KAAA3F,iBACA2F,EAAAc,QACA,EACA7G,aACA,KAAAmB,YAAA,GACA,KAAAI,KAAA,GACA,KAAA2B,aAAA,EACA,EACA1B,YACA,KAAAC,WAAA,CACA,IClQ0P,ICQtP,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIF,EAAe,EAAiB,QCnB5BpG,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,QAAQ,CAACU,YAAY,gBAAgBR,MAAM,CAAC,KAAOJ,EAAIkB,OAAOY,KAAK,OAAS,SAAS,CAAC5B,EAAG,MAAM,CAACU,YAAY,sBAAsB,CAACV,EAAG,MAAM,CAACU,YAAY,8BAA8B,CAACV,EAAG,MAAM,CAACU,YAAY,gBAAgB,CAACZ,EAAIe,GAAG,IAAIf,EAAImB,GAAGnB,EAAIkB,OAAOoK,SAAS,OAAOpL,EAAG,SAAS,CAACU,YAAY,iBAAiBK,GAAG,CAAC,MAAQhB,KAAKuL,QAAQ,CAACxL,EAAIe,GAAG,kBAC7Z,EACID,EAAkB,GCctB,GACAgB,KAAA,eACAC,KAAA,WACA,QACA,EACAE,MAAA,mBACAC,SAAA,GACAQ,QAAA,CACA8I,QACA,KAAAC,OAAAC,KAAA,KAAA5J,KACA,IC1B4P,ICQxP,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIF,EAAe,EAAiB,QCahC,GACAA,KAAA,kBACA6J,WAAA,CAAAC,WAAA,EAAAC,aAAAA,GAEA5J,MAAA,kBACAF,OACA,OACAmG,IAAA,KACA4D,OAAA,KACAC,UAAA,KACAC,UAAA,EACAC,kBAAA,EAEA1H,oBAAA,EACAvB,gBAAA,KACAC,gBAAA,KACAiJ,cAAA,KACAC,cAAA,KAEAC,eAAA,KACAC,cAAA,EACAC,cAAA,EACAC,sBAAA,EACA1J,aAAA,GAEA,EACAX,SAAA,CACAsK,cAAA,WACA,YAAA/L,eAAA,KAAA8L,sBAAA,QAAAhI,kBACA,EACAX,gBAAA,WACA,YAAA4I,cACA,GAEA,CACAC,WAAA,UACAC,QAAA,EACAC,WAAA,oDAGA,EACAzI,SAAA,WACA,eAAAlB,gBACA,SACA,IAAA4J,EAAA,KAAA5J,gBACA6J,EAAA,KAAA5J,gBACA6J,EAAA,KAAAZ,cACAa,EAAA,KAAAZ,cACAa,EAAA,GACA,QAAA9F,EAAA0F,EAAA1F,GAAA4F,EAAA5F,GAAA,GACA,QAAAL,EAAAgG,EAAAhG,GAAAkG,EAAAlG,GAAA,IACA,MAAAxC,EAAA,GAAA6C,EAAAL,EAAA,GACAoG,EAAA,KAAA7L,OAAAC,MAAAC,SAAA4L,aAAA7I,GACA4I,EAAAzL,QAAA,KAAAJ,OAAAC,MAAAC,SAAAE,OAAA,eAAAyL,EAAAE,OACAH,EAAA7F,KAAA8F,EAEA,CAEA,OAAAD,CACA,EACAI,mBAAA,WACA,mBAAApK,iBAAA,YAAAC,gBACA,GACA,KAAAiJ,cAAA,KAAAlJ,gBAAA,aAAAmJ,cAAA,KAAAlJ,gBAAA,MACA,EACAwF,MAAA,WACA,YAAArH,OAAAC,MAAAC,SAAAmH,KACA,EACA3F,cAAA,WACA,YAAAoJ,cAAA,KAAAlJ,gBAAA,EACA,EACAD,eAAA,WACA,YAAAoJ,cAAA,KAAAlJ,gBAAA,EACA,EACAoK,iBAAA,WACA,YAAAvK,cAAA,KAAAC,eAAA,GACA,EACAc,qBAAA,WAEA,QAAAuI,iBAAA,KAAA7H,mBAAA,CACA,MAAA+I,EAAA,KAAAjB,cAAA,IACA,OACAkB,IAAA,QAAAjB,kBACAgB,KAAA,GAAAA,EAAA,KAAAjB,cAAA,SAAAA,cAAA,OACApH,MAAA,QACAgE,UAAA,OAEA,CACA,OACAuE,QAAA,OAGA,EACA1J,0BACA,IAAA2J,EAAA,KAAArM,OAAAC,MAAAC,SAAAoM,YACAC,EAAAF,EAAA,KAAArB,gBACA,OAAAuB,EACAA,EAAA9H,YAEA,EACA,EACA7B,gBAAA,WAEA,mBAAAhB,gBACA,CACA4K,SAAA,WACAN,KAAA,QAAAtK,oBACAuK,IAAA,QAAAtK,oBACAgC,MAAA,KAAAiH,cAAA,KAAAlJ,gBAAA,QACAkC,OAAA,KAAAiH,cAAA,KAAAlJ,gBAAA,QACA4K,gBAAA,uBAGA,CACAD,SAAA,WACAN,KAAA,EACAC,IAAA,EACAtI,MAAA,EACAC,OAAA,EACA2I,gBAAA,sBAEA,EACA9J,qBAAA,WACA,mBAAAf,gBACA,KAAAC,gBAAA,IACA,CACA2K,SAAA,WACAN,MAAA,KAAAtK,gBAAA,KAAAkJ,eAAA,UACAqB,IAAA,KAAAtK,gBAAA,QACAgC,MAAA,OACAC,OAAA,OACA4I,aAAA,MACAD,gBAAA,SACAE,UAAA,UAKA,CACAH,SAAA,WACAN,MAAA,KAAAtK,gBAAA,KAAAkJ,eAAA,UACAqB,IAAA,QAAApB,cAAA,OACAlH,MAAA,OACAC,OAAA,OACA4I,aAAA,MACAD,gBAAA,SACAE,UAAA,UAIA,CACAP,QAAA,OACAI,SAAA,WACAN,KAAA,EACAC,IAAA,EACAtI,MAAA,EACAC,OAAA,EACA2I,gBAAA,sBAGA,GAEAG,UACA,KAAA9F,IAAA,KAAAC,MAAAC,OAAAC,WAAA,MACA,KAAAyD,OAAA,KAAA3D,MAAA8F,UAAA5F,WAAA,MACA,KAAA0D,UAAA,KAAA7D,IAAAgG,gBAAA,OACA,KAAA9M,OAAA+M,WAAAC,IACA,2BAAAA,EAAAC,KACA,KAAApG,OAAAmG,EAAAE,QAAApB,aAAA,KAAA9L,OAAAC,MAAAC,SAAAE,OACA,qBAAA4M,EAAAC,KACA,KAAAE,SAAAH,EAAAE,QAAAnK,KAAA,KAAA/C,OAAAC,MAAAC,SAAAE,OACA,sBAAA4M,EAAAC,MAEA,KAAApG,OAAA,KAAA7G,OAAAC,MAAAC,SAAA4L,aAAAkB,EAAAE,QAAA9M,MACA,GAEA,EACAkB,QAAA,CACA8L,iBACA,KAAAjK,oBAAA,EACA,KAAAvB,gBAAA,KACA,KAAAC,gBAAA,KACA,KAAAiJ,cAAA,KACA,KAAAC,cAAA,IACA,EACAoC,SAAApK,EAAA3C,GACA,KAAAuK,UAAAhK,KAAA0M,IAAAtK,EAAAyC,QACAzC,EAAA3C,QAAAA,GACA,KAAA0G,IAAAwG,aAAA,KAAA3C,UAAA5H,EAAA+C,EAAA/C,EAAA0C,GACA,KAAAiF,OAAA6C,UAAAxK,EAAA+C,EAAA/C,EAAA0C,EAAA,QAEA,KAAAiF,OAAA4C,aAAA,KAAA3C,UAAA5H,EAAA+C,EAAA/C,EAAA0C,EAEA,EACAoB,OAAAQ,EAAAjH,GAEA,KAAA0G,IAAAyG,UAAA,aACA,KAAA7C,OAAA6C,UAAA,aACA,QAAAvK,KAAAqE,EACA,KAAAsD,UAAAhK,KAAA0M,IAAAhG,EAAArE,GAAAwC,QACA6B,EAAArE,GAAA5C,QAAAA,EACA,KAAA0G,IAAAwG,aAAA,KAAA3C,UAAAtD,EAAArE,GAAA8C,EAAAuB,EAAArE,GAAAyC,GAEA,KAAAiF,OAAA4C,aAAA,KAAA3C,UAAAtD,EAAArE,GAAA8C,EAAAuB,EAAArE,GAAAyC,GAGA,KAAAoF,kBAAA,CACA,EACA3H,gBAAA,SAAAH,GAGA,OACAyJ,SAAA,WACAN,KAAA,GAAAnJ,EAAA+C,MACAqG,IAAA,GAAApJ,EAAA0C,MACA5B,MAAA,OACAC,OAAA,OACA2I,gBAAA,MAEA,EACArK,YAAAiH,GACA,QAAAuB,WAAA,KAAAC,iBACA,OAGA2C,YAAA,KACA,KAAArK,qBACA,KAAAgI,uBAAA,EACAqC,YAAA,KACA,KAAArC,uBAAA,IACA,KACA,GACA,KAEA,MAAAsC,EAAA,KAAA1G,MAAAC,OAAA0G,wBACA,IAAAC,EAAA,GAAAxF,KAAAC,OAAAiB,EAAAuE,QAAAH,EAAAvB,MAAA,IACA2B,EAAA,GAAA1F,KAAAC,OAAAiB,EAAAyE,QAAAL,EAAAtB,KAAA,IACAwB,EAAA,GAAAA,EAAA,KAAAE,EAAA,GAAAA,EAAA,MAEA,KAAA1K,oBAAA,EACA,KAAAvB,gBAAA+L,EACA,KAAA9L,gBAAAgM,EACA,KAAA/C,cAAA6C,EACA,KAAA5C,cAAA8C,EACA,EACAxL,YAAAgH,GACA,QAAAuB,WAAA,KAAAC,iBACA,OAEA,MAAA4C,EAAA,KAAA1G,MAAAC,OAAA0G,wBACA,IAAAK,EAAA1E,EAAAuE,QAAAH,EAAAvB,KACA8B,EAAA3E,EAAAyE,QAAAL,EAAAtB,IAEAwB,EAAA,GAAAxF,KAAAC,MAAA2F,EAAA,IACAF,EAAA,GAAA1F,KAAAC,MAAA4F,EAAA,IACA,KAAAL,EAAA,GAAAA,EAAA,KAAAE,EAAA,GAAAA,EAAA,KAIA,QAAA1K,mBAAA,CAoBA,GAAAwK,GAAA,KAAA7C,cACA,KAAAA,cAAA3C,KAAA8F,IAAAN,EAAA,KAAA/L,sBAEA,MAAA+L,EAAA,KAAA7C,cAAA,CACA,IAAAoD,GAAA,KAAApD,cAAA,KAAAlJ,gBAAA,UAAAmJ,cAAA,KAAAlJ,gBAAA,IACA,KAAAqM,GAAA,KAGA,MAFA,KAAApD,eAAA,EAIA,CAEA,GAAA+C,GAAA,KAAA9C,cACA,KAAAA,cAAA5C,KAAA8F,IAAAJ,EAAA,KAAAhM,sBAEA,MAAAgM,EAAA,KAAA9C,cAAA,CACA,IAAAmD,GAAA,KAAApD,cAAA,KAAAlJ,gBAAA,UAAAmJ,cAAA,KAAAlJ,gBAAA,IACA,KAAAqM,GAAA,KAGA,MAFA,KAAAnD,eAAA,EAIA,CAzBA,KAjBA,CAEA,KAAAE,cAAA8C,EACA,KAAA7C,cAAA8C,EACA,MAAA/K,EAAA,GAAA0K,EAAAE,EAAA,GACAhC,EAAA,KAAA7L,OAAAC,MAAAC,SAAA4L,aAAA7I,IACA4I,GAAA,eAAAA,EAAAE,OAAAF,EAAAE,QAAA,KAAAf,gBAAA,KAAAI,eAAAS,EAAAzL,QAAA,KAAAJ,OAAAC,MAAAC,SAAAE,MAOAyL,EAAAE,QAAA,KAAAf,iBACA,KAAAA,eAAA,OAPA,KAAAA,eAAAa,EAAAE,MACAyB,YAAA,KACA,KAAAxC,iBAAAa,EAAAE,OACA,KAAA/L,OAAAuB,SAAA,yBAAAyD,GAAA6G,EAAAE,OACA,GACA,KAKA,CA2BA,EACA7J,YACA,SAAA0I,UAAA,KAAAC,iBAAA,CAGA,GADA,KAAA1H,oBAAA,EACA,YAAAvB,iBAAA,KAAAA,kBAAA,KAAAkJ,eAAA,KAAAjJ,kBAAA,KAAAkJ,eAAA,KAAAC,eAAA,CAEA,IAAAuB,EAAA,KAAAvM,OAAAC,MAAAC,SAAAoM,YAAA,KAAAtB,gBACAuB,GAAAA,EAAAhD,KACA4E,OAAAC,KAAA7B,EAAAhD,IAAA,SAGA,CACA,KAAAzG,SAAA2D,OAAA,GACA,KAAA2G,gBAXA,CAaA,EACAjL,eACA,KAAAyI,WAEA,KAAAzH,oBACA,KAAAiK,iBAEA,KAAApC,eAAA,KACA,EACA/I,MAAAoH,GAEA,SAAAuB,WAAA,KAAAC,iBACA,OAGA,MAAA4C,EAAA,KAAA1G,MAAAC,OAAA0G,wBAEA,IAAAC,EAAAtE,EAAAuE,QAAAH,EAAAvB,KACA2B,EAAAxE,EAAAyE,QAAAL,EAAAtB,IAEAxD,EAAA,GAAAR,KAAAC,MAAAuF,EAAA,IACAjF,EAAA,GAAAP,KAAAC,MAAAyF,EAAA,IAEA,eAAAjM,iBAAA,KAAAA,kBAAA,KAAAkJ,eAAA,KAAAjJ,kBAAA,KAAAkJ,cAAA,CACA,IAAAsD,EAAA,CACAzM,gBAAA,KAAAA,gBACAC,gBAAA,KAAAA,gBACAiJ,cAAA,KAAAA,cACAC,cAAA,KAAAA,eAEA,KAAAnJ,gBAAAuG,KAAAmG,IAAA3F,EAAA0F,EAAAzM,iBACA,KAAAC,gBAAAsG,KAAAmG,IAAA5F,EAAA2F,EAAAxM,iBACA,KAAAiJ,cAAA3C,KAAA8F,IAAAtF,EAAA0F,EAAAvD,eACA,KAAAC,cAAA5C,KAAA8F,IAAAvF,EAAA2F,EAAAtD,cACA,MACA,KAAAnJ,gBAAA+G,EACA,KAAA9G,gBAAA6G,EACA,KAAAoC,cAAAnC,EACA,KAAAoC,cAAArC,EAKA,YAAAoC,cAAA,KAAAlJ,gBAAA,UAAAmJ,cAAA,KAAAlJ,gBAAA,QAGAsG,KAAAoG,SAAA,GACA,KAAAzD,cAAA,KAAAlJ,kBACA,KAAAkJ,eAAA,IAGA,KAAAC,cAAA,KAAAlJ,kBACA,KAAAkJ,eAAA,IAKAjB,QAAAC,IAAA,aAEA,MAAAyE,EAAA,KAAAnH,MAAAoH,QAAAC,GACA,eAAAA,EAAA3C,OACA2C,EAAA5I,GAAA,KAAAlE,iBACA8M,EAAAjJ,GAAA,KAAA5D,iBACA6M,EAAA5I,GAAA,KAAAgF,eACA4D,EAAAjJ,GAAA,KAAAsF,gBAiBA,IAAAyD,EAAA/H,SAGA,KAAA7E,gBAAA,KACA,KAAAC,gBAAA,KACA,KAAAiJ,cAAA,KACA,KAAAC,cAAA,KAEA,EACA3H,QACA,KAAApD,OAAAC,MAAAC,SAAAC,QACA,KAAAkK,OAAAsE,KAAA,eAEA,KAAA3O,OAAAuB,SAAA,mBAEA,EACAO,sBACA,KAAAsL,iBACA,KAAA/C,OAAAC,KAAA,cACA,EACAvI,kBAAAN,GACA,KAAAA,aAAAA,EACA,KAAA4I,OAAAC,KAAA,eACA,KAAAD,OAAAsE,KAAA,uBACA,EACA3M,kBACA,KAAAqI,OAAAC,KAAA,cACA,IC3c+P,ICQ3P,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIF,EAAe,EAAiB,QCnB5B3L,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACU,YAAY,qBAAqB,CAACV,EAAG,gBAAgB,CAACE,MAAM,CAAC,KAAO,oBAAoB,QAAUJ,EAAIsL,WAAWpL,EAAG,MAAM,CAACU,YAAY,yBAAyBK,GAAG,CAAC,MAAQjB,EAAIkB,OAAO8O,WAAW9P,EAAG,MAAM,CAACU,YAAY,kBAAkB,CAACV,EAAG,MAAM,CAACU,YAAY,iBAAiB,CAACZ,EAAIe,GAAG,aAAab,EAAG,MAAM,CAACU,YAAY,QAAQR,MAAM,CAAC,IAAO,GAAEJ,EAAIgB,4BAA4B,IAAM,SAASC,GAAG,CAAC,MAAQjB,EAAIkB,OAAO8O,aAAa9P,EAAG,MAAM,CAACU,YAAY,oBAAoBZ,EAAIiE,GAAIjE,EAAIiQ,MAAM,SAAStC,GAAK,OAAOzN,EAAG,MAAM,CAACkE,IAAIuJ,EAAIvH,GAAGxF,YAAY,UAAU,CAACV,EAAG,kBAAkB,CAACE,MAAM,CAAC,QAAUJ,EAAIkQ,QAAQ,QAAUvC,EAAIjM,QAAQ,GAAKiM,EAAIvH,GAAG,aAAeuH,EAAIwC,aAAa,EAAIxC,EAAIzG,EAAE,EAAIyG,EAAI9G,EAAE,MAAQ8G,EAAI1I,MAAM,OAAS0I,EAAIzI,OAAO,YAAcyI,EAAI9H,YAAY,IAAM8H,EAAIhD,IAAI,OAAS3K,EAAIoQ,WAAW,EAAE,IAAG,KAAKlQ,EAAG,cAAc,CAACE,MAAM,CAAC,KAAO,aAAa,GAAKJ,EAAIqQ,UAAU,MAAQrQ,EAAIsQ,aAAa,OAAStQ,EAAIuQ,cAAc,EAAIvQ,EAAIwQ,SAAS,EAAIxQ,EAAIyQ,SAAS,UAAYzQ,EAAI0Q,gBAAgBzP,GAAG,CAAC,MAAQjB,EAAI2Q,kBAAkB,EACvkC,EACI7P,EAAkB,GCFlBf,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACU,YAAY,iBAAiB,CAACV,EAAG,MAAM,CAACU,YAAY,mBAAmB+C,MAAO3D,EAAI4Q,cAAe,CAAC1Q,EAAG,IAAI,CAACE,MAAM,CAAC,KAAOJ,EAAI6Q,SAAS,OAAS,WAAW,CAAC3Q,EAAG,SAAS,CAACwD,IAAI,SAASC,MAAO3D,EAAI4Q,aAAcxQ,MAAM,CAAC,MAAQH,KAAKiB,OAAO+D,MAAM,OAAShF,KAAKiB,OAAOgE,cAAchF,EAAG,MAAM,CAACU,YAAY,sBAAsB,CAACV,EAAG,MAAM,CAACU,YAAY,kBAAkB,CAACV,EAAG,IAAI,CAACE,MAAM,CAAC,KAAOJ,EAAIkB,OAAOyJ,IAAI,OAAS,WAAW,CAAC3K,EAAIe,GAAG,IAAIf,EAAImB,GAAGlB,KAAKiB,OAAO2E,aAAa,SAAS3F,EAAG,MAAM,CAACU,YAAY,mCAAmCK,GAAG,CAAC,MAAQjB,EAAI8Q,OAAO,CAAC5Q,EAAG,OAAO,CAACF,EAAIe,GAAG,YAAYb,EAAG,MAAM,CAACU,YAAY,YAAYR,MAAM,CAAC,IAAO,GAAEJ,EAAIgB,2BAA2B,IAAM,YAAYd,EAAG,MAAM,CAACU,YAAY,mCAAmCK,GAAG,CAAC,MAAQjB,EAAI+Q,OAAO,CAAC7Q,EAAG,OAAO,CAACF,EAAIe,GAAG,YAAYb,EAAG,MAAM,CAACU,YAAY,YAAYR,MAAM,CAAC,IAAO,GAAEJ,EAAIgB,2BAA2B,IAAM,cAAcd,EAAG,MAAM,CAACU,YAAY,yBAAyB,CAACV,EAAG,IAAI,CAACF,EAAIe,GAAG,IAAIf,EAAImB,GAAGlB,KAAK+Q,aAAa,OAAO9Q,EAAG,IAAI,CAACF,EAAIe,GAAG,kBAAkBf,EAAImB,GAAGlB,KAAKgR,aAAa,gBACrmC,EACInQ,EAAkB,GCqCtB,GACAgB,KAAA,SACAC,OACA,OACAf,WAAAgB,aAEA,EACAC,MAAA,gGACAC,SAAA,CACA0O,aAAA,WACA,MAAA1L,EAAA,SAAAhE,OAAA+D,MAAA,KAAA/D,OAAAgE,OACA,OACA4C,OAAA,WACA7C,MAAA,OACAC,OAAA,GAAAA,MAEA,EACA2L,SAAA,WACA,oDAAA3P,OAAAQ,QAAAe,YACA,EACAwO,YAAA,WACA,OAAA1O,SAAA,KAAArB,OAAAiP,cAAA,KAAApI,QAAA,EACA,EACAiJ,YAAA,WACA,YAAAE,eACA,iCACA,KAAAC,iBACA,qCAEA,4BAEA,EACAD,eAAA,WACA,IAAAE,GAAA,EACA,QAAAlK,EAAA,KAAAhG,OAAAgG,EAAAA,EAAA,KAAAhG,OAAAgG,EAAA,KAAAhG,OAAA+D,MAAAiC,GAAA,IACA,QAAAL,EAAA,KAAA3F,OAAA2F,EAAAA,EAAA,KAAA3F,OAAA2F,EAAA,KAAA3F,OAAAgE,OAAA2B,GAAA,IACA,MAAAxC,EAAA,GAAA6C,EAAAL,EAAA,GACA,QAAAzF,OAAAC,MAAAC,SAAA4L,aAAA7I,GAAA8I,QAAA,KAAAjM,OAAAkF,GAAA,CACAgL,GAAA,EACA,KACA,CACA,CACA,IAAAA,EACA,KACA,CACA,OAAAA,CACA,EACAD,iBAAA,WACA,IAAAA,GAAA,EACA,QAAAjK,EAAA,KAAAhG,OAAAgG,EAAAA,EAAA,KAAAhG,OAAAgG,EAAA,KAAAhG,OAAA+D,MAAAiC,GAAA,IACA,QAAAL,EAAA,KAAA3F,OAAA2F,EAAAA,EAAA,KAAA3F,OAAA2F,EAAA,KAAA3F,OAAAgE,OAAA2B,GAAA,IACA,MAAAxC,EAAA,GAAA6C,EAAAL,EAAA,GACA,QAAAzF,OAAAC,MAAAC,SAAA4L,aAAA7I,GAAA8I,QAAA,KAAAjM,OAAAkF,GAAA,CACA+K,GAAA,EACA,KACA,CACA,CACA,GAAAA,EACA,KACA,CACA,OAAAA,CACA,GAEAnD,UACA,KAAA/F,QACA,EACAvF,QAAA,CACAoO,OACA,KAAAK,iBACA,KAAAjQ,OAAAmQ,OAAA,KAAAnQ,OAAAkF,GAAA,KAAAlF,OAAAgG,EAAA,KAAAhG,OAAA2F,EAAA,KAAA3F,OAAA+D,MAAA,KAAA/D,OAAAgE,QAEA,KAAAgL,QAAA,8GAEA,EACAa,OACA,KAAAG,eACA,KAAAhB,QAAA,wEACA,KAAAiB,iBACA,KAAAjB,QAAA,qGAEA,KAAA9O,OAAAuB,SAAA,wBAAAzB,OAAAkF,GAEA,EACAkL,aACA,YAAApQ,OAAA+D,MAAA,KAAA/D,OAAAgE,MACA,EACA+C,SACA,MAAAC,EAAA,KAAAC,MAAAC,OAAAC,WAAA,MACA0D,EAAA7D,EAAAgG,gBAAA,OACA,QAAAhH,EAAA,KAAAhG,OAAAgG,EAAAA,EAAA,KAAAhG,OAAAgG,EAAA,KAAAhG,OAAA+D,MAAAiC,GAAA,GACA,QAAAL,EAAA,KAAA3F,OAAA2F,EAAAA,EAAA,KAAA3F,OAAA2F,EAAA,KAAA3F,OAAAgE,OAAA2B,GAAA,IACA,MAAAxC,EAAA,GAAA6C,EAAAL,EAAA,GACAoG,EAAA,KAAA7L,OAAAC,MAAAC,SAAA4L,aAAA7I,GACA4I,IACAlB,EAAAhK,KAAA0M,IAAAxB,EAAArG,QACAsB,EAAAwG,aAAA3C,EAAA7E,EAAA,KAAAhG,OAAAgG,EAAAL,EAAA,KAAA3F,OAAA2F,GAEA,CAEA,IC1I+P,ICQ3P,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIF,EAAe,EAAiB,QCKhC,GACA/E,KAAA,iBACA6J,WAAA,CACA4F,gBAAA,EACA3F,WAAA,EACAC,aAAAA,GAEA9J,OACA,OACAf,WAAAgB,aACAqO,UAAA,KACAC,aAAA,KACAC,cAAA,KACAC,SAAA,KACAC,SAAA,KACAnF,QAAA,GAEA,EACArJ,MAAA,YACAC,SAAA,CACAR,UACA,QACA,EACAuO,OACA,YAAA7O,OAAAC,MAAAC,SAAAkQ,QACA,GAEAxD,UACA,EACAtL,QAAA,CACAwN,QAAA5E,GACA,KAAAA,QAAAA,EACA,KAAAG,OAAAsE,KAAA,oBACA,EACAK,OAAAhK,EAAAc,EAAAL,EAAA5B,EAAAC,GACA,KAAAmL,UAAAjK,EACA,KAAAoK,SAAAtJ,EACA,KAAAuJ,SAAA5J,EACA,KAAAyJ,aAAArL,EACA,KAAAsL,cAAArL,EACA,KAAAuG,OAAAsE,KAAA,aACA,EACAW,iBACA,KAAAL,UAAA,KACA,KAAA5E,OAAAC,KAAA,cACA,KAAAxK,OAAA8O,SACA,EACAW,gBACA,KAAAN,UAAA,KACA,KAAA5E,OAAAC,KAAA,aACA,IC1E8P,ICQ1P,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIF,EAAe,EAAiB,QCAhC,GACA5J,KAAA,MACA6J,WAAA,CACA8F,gBAAA,EACAC,gBAAA,EACAC,eAAAA,GAEA5P,OACA,OACA1B,aAAA,EACAI,eAAA,EACA6K,QAAA,0BAEA,EACApJ,SAAA,CACAvB,qBACA,YAAAS,OAAAC,MAAAC,SAAA2K,gBACA,GAEA+B,UACA,KAAA5M,OAAAuB,SAAA,mBACA,EACAD,QAAA,CACApC,cACA,KAAAD,aAAA,CACA,EACAG,aACA,KAAAH,aAAA,CACA,EACAK,oBACA,KAAAD,eAAA,KAAAA,aACA,EACAmR,UAAAtG,GACA,KAAAA,QAAAA,EACA,KAAAG,OAAAsE,KAAA,gBACA,ICtD0O,ICQtO,GAAY,OACd,EACAhQ,EACAe,GACA,EACA,KACA,KACA,MAIF,EAAe,EAAiB,Q,kkZCPhC,MAAM+Q,GAAoB,IAAIC,GAAAA,QAAQ,sEAEhCC,GAAuB,KAEvBC,GAA0B,IAE1BC,GAAoB,GAEpBC,GAAuB,IAEvBC,GAAe,IACfC,GAAa,GAEbC,GAAqBA,IACzBC,GAAAA,0BAAAA,OAAiC,CAC/BC,WAAY,CACVnM,GAAI,IACJoM,MAAO,MACPnE,KAAM,OACNtM,KAAM,CACJ0Q,SAAU,6CAMlBC,eAAeC,GAAeC,EAAUC,GACtC,IAAIC,EACJ,IACEA,EAAuB,IAAIF,EAASG,WAEpC,MAAMC,EAAqB,IAAIJ,EAASK,SAASC,GAAerB,IAGhE,IAAIsB,GAAc,EAIdC,EAAiC,GAErCN,EAAqBO,aAAaL,EAAmBtR,SAAST,IAAGyR,UAC/DxH,QAAQC,IAAI,kDAAmDpJ,GAC/D,IAAK,IAAIuR,KAAMvR,EAAKsR,aAAaE,UAAW,CAC1C,IAAIC,QAAeR,EAAmBS,wBAAwB,CAAEC,YAAaJ,IAC7E,IAAK,IAAI7I,KAAS+I,EAChB,GAAoB,iBAAhB/I,EAAMA,MAA0B,CAClC,IAAIvD,EAAI3E,SAASkI,EAAM1I,KAAK4R,aACxB9M,EAAItE,SAASkI,EAAM1I,KAAK6R,aAExBzP,EAAO,CACTE,MAAQ6C,EAAI,GAAM,IAAML,EAAI,GAC5BsG,MAAO1C,EAAM1I,KAAKoL,MAClB3L,MAAOiJ,EAAM1I,KAAK8R,SAClB3M,EAAGA,EACHL,EAAGA,EACHD,OAAQF,EAAwB+D,EAAM1I,KAAK+R,aAEzCX,EACFN,EAAO,mBAAoB,CAAE1O,KAAMA,IAEnCiP,EAA+BjM,KAAK,CAClCkH,KAAM,mBACNtM,KAAM,CAAEoC,KAAMA,IAGpB,MAAO,GAAoB,cAAhBsG,EAAMA,MAAuB,CACtC,IAAIvD,EAAI3E,SAASkI,EAAM1I,KAAK4R,aACxB9M,EAAItE,SAASkI,EAAM1I,KAAK6R,aAExB9G,EAAOvK,SAASkI,EAAM1I,KAAKgS,WAC3BhH,EAAOxK,SAASkI,EAAM1I,KAAKiS,WAE/B,IAAK,IAAIV,EAAKpM,EAAI,GAAIoM,EAAKxG,EAAO,GAAIwG,IACpC,IAAK,IAAIW,EAAKpN,EAAI,GAAIoN,EAAKlH,EAAO,GAAIkH,IAAM,CAC1C,IAAI9P,EAAO,CACTE,MAAY,IAALiP,EAAWW,EAClB9G,MAAO1C,EAAM1I,KAAKoL,MAClB3L,MAAOiJ,EAAM1I,KAAK8R,SAClB3M,EAAQ,GAALoM,EACHzM,EAAQ,GAALoN,EACHrN,OAAQH,KAEN0M,EACFN,EAAO,mBAAoB,CAAE1O,KAAMA,IAEnCiP,EAA+BjM,KAAK,CAClCkH,KAAM,mBACNtM,KAAM,CAAEoC,KAAMA,IAGpB,CAEJ,KAA2B,wBAAhBsG,EAAMA,MACX0I,EACFN,EAAO,2BAA4BpI,EAAM1I,KAAKmS,UAE9Cd,EAA+BjM,KAAK,CAClCkH,KAAM,2BACNtM,KAAM0I,EAAM1I,KAAKmS,WAGI,iBAAhBzJ,EAAMA,QACX0I,EACFN,EAAO,oBAAqB,CAAErR,MAAOiJ,EAAM1I,KAAKoS,SAAUC,MAAO3J,EAAM1I,KAAKsS,oBAE5EjB,EAA+BjM,KAAK,CAClCkH,KAAM,oBACNtM,KAAM,CAAEP,MAAOiJ,EAAM1I,KAAKoS,SAAUC,MAAO3J,EAAM1I,KAAKsS,qBAKhE,WAII,IAAIC,SAAQ,SAASC,EAASC,GAClC5F,WAAW2F,EAAS,GACtB,IAEA,IAAIE,EAAUC,KAAKC,MACnBzJ,QAAQC,IAAI,iBACZ,MAAQ9J,MAAOuT,SAAgC5B,EAAmB6B,eAClE3J,QAAQC,IAAI,cAAeuJ,KAAKC,MAAQF,GAAS,KAAM1M,QAAQ,IAG/D,IAAI+M,EAAqB,CAAC,EACtB5H,EAAe,CAAC,GAEf6H,OAAQC,SAAqBhC,EAAmBiC,UAAU,CAACC,YAAaN,IAC7E1J,QAAQC,IAAI,iBAAkBuJ,KAAKC,MAAQF,GAAS,KAAM1M,QAAQ,IAGlE,IAAK,IAAIoN,KAAQH,EAAYI,OAAQ,CACnC,IAAIC,EAAkB,IAAItO,EAAAA,GAAGoO,EAAK,IAC9BjO,EAAI3E,SAAS8S,EAAgBjO,KAAK,GAAG3E,SAAS,KAC9CoE,EAAItE,SAAS8S,EAAgBhO,IAAI,IAAIN,EAAAA,GAAG,MAAO,KAAKtE,SAAS,KAEjE,MAAM4B,EAAY,IAAJ6C,EAAUL,EACxBiO,EAAmBzQ,GAASqC,EAAwByO,EAAK,GAC3D,CAEA,IAAK,IAAIA,KAAQH,EAAYM,WAAY,CACvC,IAAID,EAAkB,IAAItO,EAAAA,GAAGoO,EAAK,IAC9BI,EAAe,IAAIxO,EAAAA,GAAGoO,EAAK,IAC3BjO,EAAI3E,SAAS8S,EAAgBjO,KAAK,GAAG3E,SAAS,KAC9CoE,EAAItE,SAAS8S,EAAgBhO,IAAI,IAAIN,EAAAA,GAAG,MAAO,KAAKtE,SAAS,KAE7D0K,EAAQoI,EAAanO,KAAK,IAAI3E,SAAS,IACvCjB,EAAQ+T,EAAalO,IAAI,IAAIN,EAAAA,GAAG,aAAc,KAAKtE,SAAS,IAEhE,MAAM4B,EAAY,IAAJ6C,EAAUL,EACxB,IAAI1C,EAAO,CACTE,MAAOA,EACP8I,MAAOA,EACP3L,MAAOA,EACP0F,EAAO,GAAJA,EACHL,EAAO,GAAJA,EACHD,QAAuC,IAA/BwL,GAAWoD,QAAQrI,IAAgB2H,EAAmBzQ,IAA6BoC,KAE7FyG,EAAa7I,GAASF,CACxB,CAEA,IAAK,IAAI0C,EAAI,EAAGA,EAAI,IAAKA,IACvB,IAAK,IAAIK,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,IAAI7C,EAAY,IAAJ6C,EAAUL,EACtB,IAAKqG,EAAa7I,GAAQ,CACxB,MAAMF,EAAO,CACXE,MAAOA,EACP8I,MAAO,aACP3L,MAAO,EACP0F,EAAO,GAAJA,EACHL,EAAO,GAAJA,EACHD,OAAQL,MAAM,KAAaC,KAAK,IAElC0G,EAAa7I,GAASF,CACxB,CACF,CAGF0O,EAAO,oBAAqB,CAAErR,MAAOwT,EAAYS,cAAerB,MAAOY,EAAYU,8BACnF7C,EAAO,2BAA4BmC,EAAYW,eAC/C9C,EAAO,yBAA0B,CAAEG,qBAAoB4B,wBAAuB1H,eAAc0I,aAAchD,EAASiD,UAAUb,EAAYc,YACzI3C,GAAc,EAGd,IAAK,IAAI1I,KAAS2I,EAChBlI,QAAQC,IAAI,kBACZ0H,EAAOpI,EAAM4D,KAAM5D,EAAM1I,MAE3BmJ,QAAQC,IAAI,WAAYuJ,KAAKC,MAAQF,GAAS,KAAM1M,QAAQ,GAC9D,CAAE,MAAOgO,GACP7K,QAAQC,IAAI,wBAAyB4K,GACrCjD,GAAwBA,EAAqBkD,cAC7CpH,YAAW,WACT+D,GAAeC,EAAUC,EAC3B,GAAG,IACL,CACF,CAEAH,eAAeuD,GAAoBvU,EAASkR,EAAUC,GACpDD,EAASsD,WAAWxU,GAAS+H,MAAK,SAAS9H,GACrCA,GACFkR,EAAO,6BAA8B,CAACnR,UAASC,SAAUA,EAAU,KAAeoG,QAAQ,IAE9F,GACF,CAEA2K,eAAeyD,GAAa/P,EAAIwP,EAAQQ,EAAaxD,EAAUC,GAC7D,MAAOnR,QAAS2U,SAAoBzD,EAAS0D,aAAaC,GAAQ,CAChEC,UAAW,EACXC,IAAKb,EACLc,WAAY,CACVC,IAAKvQ,KAGHwQ,EAAc,IAAIhE,EAASK,SAASsD,GAAQF,GAClD,IAAIQ,QAAgBD,EAAYlU,QAAQoU,iBAAiB,CAACC,SAAS,IAAIC,KAAK,CAACC,aAAa,IAC1FpE,EAAO,aAAc,CACnBuD,YAAaA,EACbzI,IAAK,CACHjM,QAAS2U,EACTjQ,GAAIyQ,EAAQzQ,GACZ8Q,MAAOL,EAAQK,MACf/G,aAAc0G,EAAQ1G,aACtBtK,YAAagR,EAAQhR,YACrB8E,IAAKkM,EAAQlM,IACbzD,EAAG3E,SAASsU,EAAQM,kBACpBtQ,EAAGtE,SAASsU,EAAQO,kBACpBnS,MAAO1C,SAASsU,EAAQQ,gBAAkB9U,SAASsU,EAAQM,kBAC3DjS,OAAQ3C,SAASsU,EAAQS,gBAAkB/U,SAASsU,EAAQO,oBAGlE,CAEA1E,eAAe6E,GAAcnB,EAAaxD,EAAUgD,EAAQ5C,EAAoB4B,EAAuB/B,GACrG3H,QAAQC,IAAI,uBACZ,MAAOqM,SAAUC,SAAuBzE,EAAmBtQ,QAAQgV,oBAAoB,CAACX,SAAU,EAAGY,OAAQvB,IAAcY,KAAK,CAACC,aAAa,EAAM/B,YAAaN,IACjK1J,QAAQC,IAAI,sBACZ,MAAOyM,SAAUC,SAA2BjF,EAASkF,sBAAsB,CAACN,SAAUC,IACtFvM,QAAQC,IAAI,gBAGZ,IAAK,IAAI4M,KAAgBF,EAAmB,CAC1C3M,QAAQC,IAAI,UAAW4M,GACvB,IACE,IAAIC,EAAW,IAAIpF,EAASK,SAASgF,GAAUF,IAC1Cb,MAAOgB,EAAcvK,IAAK0I,EAAY8B,WAAYC,SAA2BJ,EAAStV,QAAQ2V,QAAQ,CAACtB,SAAU,IAAIC,KAAK,CAACC,aAAa,IAC7I,MAAML,EAAc,IAAIhE,EAASK,SAASsD,GAAQF,IAC3ChV,MAAOiX,SAA8B1B,EAAY/B,eAExD,GAAIyD,GAAwBA,EAAqBC,WAAY,CAC3D,IAAI1B,QAAgBD,EAAYlU,QAAQoU,iBAAiB,CAACC,SAAS,IAAIC,KAAK,CAACC,aAAa,EAAM/B,YAAaoD,IAC7G,GAAIzB,EAAQK,MAAMsB,OAAOpC,IAAiBS,EAAQsB,WAAWK,OAAOxF,EAAmBtR,SAAU,CAC/F,MAAOA,QAAS+W,SAA4B7F,EAAS0D,aAAaC,GAAQ,CAAEC,UAAW,EAAGC,IAAKb,EAAQc,WAAY,CAAEC,IAAKE,EAAQzQ,MAC9HqS,EAAmBD,OAAOnC,IAC5BxD,EAAO,sBAAuB,CAC5BuD,YAAaA,EACbzI,IAAK,CACHjM,QAAS2U,EACTjQ,GAAIyQ,EAAQzQ,GACZ8Q,MAAOL,EAAQK,MACf/G,aAAc0G,EAAQ1G,aACtBtK,YAAagR,EAAQhR,YACrB8E,IAAKkM,EAAQlM,IACbzD,EAAG3E,SAASsU,EAAQM,kBACpBtQ,EAAGtE,SAASsU,EAAQO,kBACpBnS,MAAO1C,SAASsU,EAAQQ,gBAAkB9U,SAASsU,EAAQM,kBAC3DjS,OAAQ3C,SAASsU,EAAQS,gBAAkB/U,SAASsU,EAAQO,oBAIpE,CACF,CACF,CAAE,MAAOrB,GACP7K,QAAQC,IAAI4K,EACd,CACF,CACF,CAEO,MAAMzU,GAAW,CACtBoX,YAAY,EACZrX,MAAO,CACLsX,aAAc,KACd/F,SAAU,KACVgG,mBAAoB,KACpBrX,QAAS,KACTsX,yBAA0B,KAC1BvW,aAAc,IACdwW,wBAAwB,EACxBtH,SAAU,GACVwB,mBAAoB,KACpB4B,sBAAuB,KACvB3I,kBAAkB,EAClB2J,YAAQmD,EACRvX,MAAO,EACPgB,iBAAkB,EAClBwW,aAAa,EACb9L,aAAc,CAAC,EACfQ,YAAa,CAAC,GAEhBuL,UAAW,CACTC,gBAAgB7X,EAAOsX,GACrBtX,EAAMsX,aAAeA,CACvB,EACAQ,sBAAsB9X,EAAOuR,GAC3BvR,EAAMuX,mBAAqBhG,EAC3BD,GAAeC,EAAU3S,KAAK4S,OAChC,EACAuG,YAAY/X,EAAOuR,GACjB1H,QAAQC,IAAI,cAAeyH,GAC3BvR,EAAMuR,SAAWA,EACjBvR,EAAMuR,SAASzE,UAAU,kBAAkB1E,MAAM4P,IAC/CA,EAAWpY,GAAG,QAASwJ,IAEQmI,GAAU0G,mBAAmB7P,MAAM8P,IAC1DA,GAAsBC,aAAaC,OAASF,GAAsBC,aAAaE,oBAEjFzZ,KAAK4S,OAAO,+BAAgC0G,GAAsBC,aAAaE,mBAAmBhY,QACpG,GACA,GACF,GAEN,EACAiY,cAActY,GAAO,mBAAC2R,EAAkB,sBAAE4B,EAAqB,aAAE1H,EAAY,OAAE0I,IAC7E1K,QAAQC,IAAI,iBACZ9J,EAAM2R,mBAAqBA,EAC3B3R,EAAMuT,sBAAwBA,EAC9BvT,EAAM6L,aAAeA,EACrB7L,EAAMuU,OAASA,EACfvU,EAAM4K,kBAAmB,GACpB5K,EAAMyX,wBAA0BzX,EAAME,UACzCF,EAAMyX,wBAAyB,EAC/BvB,GAAclW,EAAME,QAASF,EAAMuX,mBAAoBvX,EAAMuU,OAAQvU,EAAM2R,mBAAoB3R,EAAMuT,sBAAuB3U,KAAK4S,SAEnIxR,EAAME,SAAW0U,GAAoB5U,EAAME,QAASF,EAAMuR,SAAU3S,KAAK4S,OAC3E,EACA+G,QAAQvY,GAAO,KAAE8C,KACyB,IAApCiO,GAAWoD,QAAQrR,EAAKgJ,SAE5B9L,EAAM6L,aAAa/I,EAAKE,OAASF,SAC1B9C,EAAMqM,YAAYvJ,EAAKgJ,OAChC,EACA0M,UAAUxY,GAAO,MAAC6V,EAAK,GAAE9Q,IACnB/E,EAAME,SAAWF,EAAME,QAAQiX,OAAOtB,IACxCf,GAAa/P,EAAI/E,EAAMuU,OAAQsB,EAAO7V,EAAMuR,SAAU3S,KAAK4S,OAE/D,EACAiH,oBAAoBzY,EAAOK,GACzBwJ,QAAQC,IAAI,uBACZ9J,EAAME,QAAUG,EAChBL,EAAMiB,aAAe,IACrBjB,EAAMmQ,SAAW,GAEjBnQ,EAAMwX,0BAA4BkB,cAAc1Y,EAAMwX,0BACtDnX,GAAWuU,GAAoBvU,EAASL,EAAMuR,SAAU3S,KAAK4S,QAC7DnR,IAAYL,EAAMwX,yBAA2BmB,aAAY,KACvD/D,GAAoBvU,EAASL,EAAMuR,SAAU3S,KAAK4S,OAAO,GACxD,OACCnR,GAAWL,EAAMuT,uBACnBvT,EAAMyX,wBAAyB,EAC/BvB,GAAc7V,EAASL,EAAMuX,mBAAoBvX,EAAM2R,mBAAoB3R,EAAMuT,sBAAuB3U,KAAK4S,SAE7GxR,EAAMyX,wBAAyB,CAEnC,EACAmB,kBAAkB5Y,GAAO,QAACK,EAAO,QAAEC,IAC7BN,EAAME,QAAQkB,aAAef,EAAQe,aACvCpB,EAAMiB,aAAeX,EAEzB,EACAuY,4BAA4B7Y,EAAO8L,GACjC,IAAIO,EAAcrM,EAAMqM,YACnBA,EAAYP,KACfO,EAAYP,GAAS,CACnBgN,SAAS,EACTxP,IAAK,GACL9E,YAAa,IAEfxE,EAAMqM,YAAcA,EAExB,EACA0M,WAAW/Y,GAAO,YAAC+U,EAAW,IAAEzI,IAC9B,GAAItM,EAAME,SAAWF,EAAME,QAAQiX,OAAOpC,KAAiB/U,EAAMmQ,SAAS6I,MAAKC,GAAKA,EAAElU,KAAOuH,EAAIvH,KAAK,CACpG,IAAI6J,EAAO5O,EAAMmQ,SAASnP,QAC1B4N,EAAK9I,KAAKwG,GACVtM,EAAMmQ,SAAWvB,CACnB,CACF,EACAsK,cAAclZ,EAAO+E,GACnB/E,EAAMmQ,SAAWnQ,EAAMmQ,SAAS3B,QAAOlC,GAAOA,EAAIvH,KAAOA,GAC3D,EACAoU,gBAAgBnZ,EAAO6S,GACrB7S,EAAMoZ,aAAevG,CACvB,EACAwG,SAASrZ,GAAO,MAACG,EAAK,MAAE4S,IACtB/S,EAAMmB,iBAAmB4R,EACzB/S,EAAMG,MAAQA,CAChB,EACAmZ,WAAWtZ,GAAO,GAAC+E,EAAE,YAAEP,EAAW,IAAE8E,IAElC,IAAI8C,EAAUmN,OAAOC,OAAO,CAAC,EAAGxZ,EAAMqM,aAEtCD,EAAQrH,GAAM,CAACP,YAAaA,EAAYxD,MAAM,EAAG,KAAOsI,IAAKA,EAAItI,MAAM,EAAG,MAC1EhB,EAAMqM,YAAcD,CACtB,GAEFqN,QAAS,CACPC,sBAAwB1Z,GAAW+E,IACjC,IAAIqH,EAAUpM,EAAMqM,YAChBC,EAAMF,EAAQrH,GAClB,OAAIuH,EACKA,EAAI9H,YACN,EAAE,GAGbmV,QAAU,CACRC,MAAK,MAAE5Z,EAAK,OAAEwR,IACZ,GAAIxR,EAAMsX,aACR,OACF,MAAMA,EAAe,IAAIuC,GAAAA,aAAa,CACpCC,MAAO,QACPC,eAAgB,IAChBC,iBAAkB,CAChBC,YAAa,CACXC,MAAO,CAAC,EACRC,oBAAqB,CACnB,CAEEC,QAASC,GAAAA,kBACTC,eAAgB,CACdC,SACEV,GAAAA,aAAAA,WAAwB,cAAe,cAAgB,KAAO5G,QAAQE,UACxEqH,kBAAkB,GAEpBC,yBAA0B,CACxBF,SAAUvJ,GACVwJ,kBAAkB,GAGpBzV,GAAI,YACJiI,KAAM,cAGV0N,2BAA4B,CAE1B,SACA,MACA,eAgCRlJ,EAAO,kBAAmB8F,GAE1BA,EAAaqD,YAAYvS,MAAKiJ,gBACtBE,GAAUqJ,qBAChB,MAAM1C,QAA6B3G,GAAU0G,oBAC7C,IAAI4C,QAA2BvD,EAAawD,gBAC5CtJ,EAAO,wBAAyBqJ,GAC5B3C,GAAsBC,aAAaC,OAASF,GAAsBC,aAAaE,qBACjFxO,QAAQC,IAAI,gBACZ0H,EAAO,cAAeD,GACtBC,EAAO,sBAAuB0G,GAAsBC,aAAaE,oBAAoBhY,SACvF,IAGFiX,EAAa1X,GAAG,kBAAkByR,eAAgBE,GAChD,MAAM2G,QAA6B3G,GAAU0G,oBAC7CzG,EAAO,cAAeD,GAClB2G,GAAsBC,aAAaE,oBAAoBhY,SACzDmR,EAAO,sBAAuB0G,GAAsBC,aAAaE,oBAAoBhY,QAEzF,GACF,EACAG,SAAQ,MAACR,EAAK,OAAEwR,IACdxR,EAAMsX,aAAa9W,SACrB,EACAD,YAAW,MAACP,EAAK,OAAEwR,IACjBxR,EAAMuR,SAAShR,aACfiR,EAAO,sBAAuB,KAChC,EACAuJ,YAAW,MAAC/a,EAAK,OAAEwR,IAAS,EAAC3L,EAAC,EAAEL,EAAC,MAAE5B,EAAK,OAAEC,EAAM,MAAEuD,EAAK,YAAE5C,EAAW,IAAE8E,IACpE,GAAsB,OAAlBtJ,EAAME,QAGR,YADAF,EAAMsX,aAAa9W,UAIrB,IAAIsW,EAAa,IAAI9W,EAAMuR,SAASK,SAASC,GAAerB,IAC5D,MAAM/G,EAAUqN,EAAWzV,QAAQ0Z,WAAW,CAC5C,YAAelV,EACf,YAAeL,EACf,UAAaK,EAAIjC,EACjB,UAAa4B,EAAI3B,EACjB,gBAAmBuD,EACnB,YAAe5C,GAAe,GAC9B,IAAO8E,GAAO,GACd,qBAAyBpB,KAAKC,MAA6B,IAAvBuI,IAAsCtP,aACzE4Z,KAAK,CACNC,KAAMjb,EAAME,QACZgb,OAAQhT,KAAKC,MAAOvE,EAAQC,EAAS,IAAM3C,SAASlB,EAAMmB,kBAAyI,KAApHyC,EAAQC,EAAS,IAAM6M,GAAuBC,GAA0BC,GAAoBC,KAAuCzP,aACjNgH,MAAK+S,GACC,IAAIlI,SAAQ5B,MAAO6B,EAASC,KACjC,IAAIqF,GAAY,EACZ4C,EAAM,GACV,MAAMpD,EAAa,IAAIhY,EAAMuR,SAASG,iBAChCsG,EAAWqD,MAAMF,GAASG,KAAIC,IAC9BA,EAAWrb,QAAQiX,OAAO3G,KAC5B4K,EAAItV,KAAKyV,EACX,IACCC,WACH,IAAK,IAAIvJ,KAAMmJ,EAAK,CAClB,IAAIjJ,QAAenS,EAAM2R,mBAAmBS,wBAAwB,CAAEC,YAAaJ,IACnF,IAAK,IAAI7I,KAAS+I,EACM,cAAhB/I,EAAMA,QACRoP,GAAY,EACZ1D,GAAa1L,EAAM1I,KAAKoL,MAAO9L,EAAMuU,OAAQnL,EAAM1I,KAAKmV,MAAO7V,EAAMuR,SAAUC,GAGvF,CACIgH,EACFtF,IAEAC,EAAO,IAAIsI,MAAM,wDACnB,MAGJ,OAAOhS,CACT,EACAiS,WAAU,MAAC1b,EAAK,OAAEwR,IAAS,GAACzM,EAAE,EAAEc,EAAC,EAAEL,EAAC,MAAE5B,EAAK,OAAEC,EAAM,MAAEuD,EAAK,YAAE5C,EAAW,IAAE8E,IACvE,IAAIwN,EAAa,IAAI9W,EAAMuR,SAASK,SAASC,GAAerB,IAC5D,OAAOsG,EAAWzV,QAAQ2T,WAAW,CAACU,SAAU,EAAG3Q,GAAIA,IAAK4Q,KAAK,CAACC,aAAa,EAAM/B,YAAa7T,EAAMuT,wBAAwBnL,MAAK,SAASuT,GAC5I,MAAMpG,EAAc,IAAIvV,EAAMuR,SAASK,SAASsD,GAAQyG,EAAOrP,KAC/D,OAAOiJ,EAAYlU,QAAQua,SAAS,CAClC,gBAAmBxU,EACnB,YAAe5C,GAAe,GAC9B,IAAO8E,GAAO,GACd,YAAetJ,EAAME,QACrB,sBAAiD,IAAvBwQ,IAAsCtP,aAC/D4Z,KAAK,CACNC,KAAMjb,EAAME,QACZgb,QAAShT,KAAKC,MAAMvE,EAAQC,EAAS,IAAM6M,GAAuB,KAAiB,KAAetP,aACjGgH,MAAK,SAAS+S,GACf,OAAO,IAAIlI,SAAQ5B,MAAM6B,EAASC,KAChC,MAAM6E,EAAa,IAAIhY,EAAMuR,SAASG,iBAChCsG,EAAWqD,MAAMF,GAASG,KAAIC,QAEjCC,WACHtI,GAAS,GAEb,GACF,GACF,EACA2I,SAAQ,MAAC7b,EAAK,OAAEwR,GAASzM,GACvB,OAAO/E,EAAMuR,SAAS0D,aAAaC,GAAQ,CACzCC,UAAW,EACXC,IAAKpV,EAAMuU,OACXc,WAAY,CACVC,IAAKvQ,KAENqD,MAAK,SAAS1H,GACf,IAAI6U,EAAc,IAAIvV,EAAMuR,SAASK,SAASsD,GAAQxU,EAAKL,SAC3D,OAAOkV,EAAYlU,QAAQwa,QAAQ,CAAC,GAAGb,KAAK,CAC1CC,KAAMjb,EAAME,QACZgb,QAAwB,IAAfpK,IAA8B1P,aACtCgH,MAAK,SAAS+S,GACf3J,EAAO,gBAAiBzM,EAC1B,GACF,GACF,EACA+W,cAAa,MAAC9b,EAAK,OAAEwR,IAAS,GAACzM,KACG,IAA5BgM,GAAWoD,QAAQpP,KAGlB/E,EAAMqM,YAAYtH,IAAO/E,EAAMuX,oBAAsBvX,EAAMuT,wBAC9D/B,EAAO,8BAA+BzM,GACtC/E,EAAMuX,mBAAmBtC,aAAaC,GAAQ,CAC5CC,UAAW,EACXC,IAAKpV,EAAMuU,OACXc,WAAY,CACVC,IAAKvQ,KAENqD,MAAK,SAAS1H,GACf,IAAI6U,EAAc,IAAIvV,EAAMuX,mBAAmB3F,SAASsD,GAAQxU,EAAKL,SACrE,OAAOkV,EAAYlU,QAAQoU,iBAAiB,CAC1CC,SAAU,IACTC,KAAK,CACNC,aAAa,GAEjB,IAAGxN,MAAK2T,IACNvK,EAAO,aAAc,CAACzM,KAAIP,YAAauX,EAAUvX,YAAa8E,IAAKyS,EAAUzS,KAAK,IAGxF,ICrnBJ0S,EAAAA,GAAAA,IAAQC,GAAAA,IAER,WAAmBA,GAAAA,GAAAA,MAAW,CAC5Bjc,MAAO,CAAC,EACR4X,UAAW,CAAC,EACZ+B,QAAS,CAAC,EACVuC,QAAS,CACPjc,SAAQA,M,sBCLZ+b,EAAAA,GAAAA,IAAQG,MACRH,EAAAA,GAAAA,OAAAA,eAA2B,EAE3B,IAAIA,EAAAA,GAAI,CACNI,MAAK,GACL1d,OAAQ2d,GAAKA,EAAEC,KACdC,OAAO,O,qBCXNC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBhF,IAAjBiF,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CACjD3X,GAAI2X,EACJI,QAAQ,EACRF,QAAS,CAAC,GAUX,OANAG,EAAoBL,GAAU/G,KAAKkH,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG3EI,EAAOC,QAAS,EAGTD,EAAOD,OACf,CAGAH,EAAoBO,EAAID,E,WC5BxB,IAAIE,EAAW,GACfR,EAAoBS,EAAI,SAASC,EAAQC,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIR,EAASzW,OAAQiX,IAAK,CACrCL,EAAWH,EAASQ,GAAG,GACvBJ,EAAKJ,EAASQ,GAAG,GACjBH,EAAWL,EAASQ,GAAG,GAE3B,IAJA,IAGIC,GAAY,EACPC,EAAI,EAAGA,EAAIP,EAAS5W,OAAQmX,MACpB,EAAXL,GAAsBC,GAAgBD,IAAa/D,OAAOqE,KAAKnB,EAAoBS,GAAGW,OAAM,SAAS9a,GAAO,OAAO0Z,EAAoBS,EAAEna,GAAKqa,EAASO,GAAK,IAChKP,EAASU,OAAOH,IAAK,IAErBD,GAAY,EACTJ,EAAWC,IAAcA,EAAeD,IAG7C,GAAGI,EAAW,CACbT,EAASa,OAAOL,IAAK,GACrB,IAAIhY,EAAI4X,SACE3F,IAANjS,IAAiB0X,EAAS1X,EAC/B,CACD,CACA,OAAO0X,CArBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIR,EAASzW,OAAQiX,EAAI,GAAKR,EAASQ,EAAI,GAAG,GAAKH,EAAUG,IAAKR,EAASQ,GAAKR,EAASQ,EAAI,GACrGR,EAASQ,GAAK,CAACL,EAAUC,EAAIC,EAwB/B,C,eC5BAb,EAAoBxD,EAAI,SAAS4D,GAChC,IAAIkB,EAASlB,GAAUA,EAAOmB,WAC7B,WAAa,OAAOnB,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAJ,EAAoBwB,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CACR,C,eCNAtB,EAAoBwB,EAAI,SAASrB,EAASuB,GACzC,IAAI,IAAIpb,KAAOob,EACX1B,EAAoB2B,EAAED,EAAYpb,KAAS0Z,EAAoB2B,EAAExB,EAAS7Z,IAC5EwW,OAAO8E,eAAezB,EAAS7Z,EAAK,CAAEub,YAAY,EAAMC,IAAKJ,EAAWpb,IAG3E,C,eCPA0Z,EAAoB9W,EAAI,WACvB,GAA0B,kBAAf6Y,WAAyB,OAAOA,WAC3C,IACC,OAAO5f,MAAQ,IAAI6f,SAAS,cAAb,EAChB,CAAE,MAAO/J,GACR,GAAsB,kBAAXxG,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxBuO,EAAoBiC,IAAM,SAAS7B,GASlC,OARAA,EAAStD,OAAOoF,OAAO9B,GAClBA,EAAO+B,WAAU/B,EAAO+B,SAAW,IACxCrF,OAAO8E,eAAexB,EAAQ,UAAW,CACxCyB,YAAY,EACZlR,IAAK,WACJ,MAAM,IAAIqO,MAAM,0FAA4FoB,EAAO9X,GACpH,IAEM8X,CACR,C,eCVAJ,EAAoB2B,EAAI,SAASS,EAAKC,GAAQ,OAAOvF,OAAOwF,UAAUC,eAAerJ,KAAKkJ,EAAKC,EAAO,C,eCCtGrC,EAAoBhX,EAAI,SAASmX,GACX,qBAAXqC,QAA0BA,OAAOC,aAC1C3F,OAAO8E,eAAezB,EAASqC,OAAOC,YAAa,CAAEjb,MAAO,WAE7DsV,OAAO8E,eAAezB,EAAS,aAAc,CAAE3Y,OAAO,GACvD,C,eCNAwY,EAAoB0C,IAAM,SAAStC,GAGlC,OAFAA,EAAOuC,MAAQ,GACVvC,EAAO+B,WAAU/B,EAAO+B,SAAW,IACjC/B,CACR,C,eCJAJ,EAAoB4C,EAAI,Y,eCAxB5C,EAAoB7W,EAAI0Z,SAASC,SAAWC,KAAKC,SAASC,KAK1D,IAAIC,EAAkB,CACrB,IAAK,GAaNlD,EAAoBS,EAAES,EAAI,SAASiC,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4Bpf,GAC/D,IAKIgc,EAAUkD,EALVxC,EAAW1c,EAAK,GAChBqf,EAAcrf,EAAK,GACnBsf,EAAUtf,EAAK,GAGI+c,EAAI,EAC3B,GAAGL,EAAS6C,MAAK,SAASlb,GAAM,OAA+B,IAAxB4a,EAAgB5a,EAAW,IAAI,CACrE,IAAI2X,KAAYqD,EACZtD,EAAoB2B,EAAE2B,EAAarD,KACrCD,EAAoBO,EAAEN,GAAYqD,EAAYrD,IAGhD,GAAGsD,EAAS,IAAI7C,EAAS6C,EAAQvD,EAClC,CAEA,IADGqD,GAA4BA,EAA2Bpf,GACrD+c,EAAIL,EAAS5W,OAAQiX,IACzBmC,EAAUxC,EAASK,GAChBhB,EAAoB2B,EAAEuB,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOnD,EAAoBS,EAAEC,EAC9B,EAEI+C,EAAqBV,KAAK,gCAAkCA,KAAK,iCAAmC,GACxGU,EAAmBC,QAAQN,EAAqB/W,KAAK,KAAM,IAC3DoX,EAAmBpa,KAAO+Z,EAAqB/W,KAAK,KAAMoX,EAAmBpa,KAAKgD,KAAKoX,G,IC/CvF,IAAIE,EAAsB3D,EAAoBS,OAAExF,EAAW,CAAC,MAAM,WAAa,OAAO+E,EAAoB,KAAO,IACjH2D,EAAsB3D,EAAoBS,EAAEkD,E","sources":["webpack://segmint-frontend/./src/App.vue","webpack://segmint-frontend/./src/components/HeaderComponent.vue","webpack://segmint-frontend/src/components/HeaderComponent.vue","webpack://segmint-frontend/./src/components/HeaderComponent.vue?eb1a","webpack://segmint-frontend/./src/components/HeaderComponent.vue?4eb4","webpack://segmint-frontend/./src/components/CanvasComponent.vue","webpack://segmint-frontend/./src/components/ClaimModal.vue","webpack://segmint-frontend/./src/utils/pixels.js","webpack://segmint-frontend/src/components/ClaimModal.vue","webpack://segmint-frontend/./src/components/ClaimModal.vue?fcfd","webpack://segmint-frontend/./src/components/ClaimModal.vue?f95a","webpack://segmint-frontend/./src/components/MessageModal.vue","webpack://segmint-frontend/src/components/MessageModal.vue","webpack://segmint-frontend/./src/components/MessageModal.vue?040b","webpack://segmint-frontend/./src/components/MessageModal.vue?a24a","webpack://segmint-frontend/src/components/CanvasComponent.vue","webpack://segmint-frontend/./src/components/CanvasComponent.vue?115f","webpack://segmint-frontend/./src/components/CanvasComponent.vue?7af1","webpack://segmint-frontend/./src/components/MyNftComponent.vue","webpack://segmint-frontend/./src/components/OneNftComponent.vue","webpack://segmint-frontend/src/components/OneNftComponent.vue","webpack://segmint-frontend/./src/components/OneNftComponent.vue?8170","webpack://segmint-frontend/./src/components/OneNftComponent.vue?591c","webpack://segmint-frontend/src/components/MyNftComponent.vue","webpack://segmint-frontend/./src/components/MyNftComponent.vue?b34d","webpack://segmint-frontend/./src/components/MyNftComponent.vue?065d","webpack://segmint-frontend/src/App.vue","webpack://segmint-frontend/./src/App.vue?51dd","webpack://segmint-frontend/./src/App.vue?0e40","webpack://segmint-frontend/./src/store/modules/Provider.js","webpack://segmint-frontend/./src/store/index.js","webpack://segmint-frontend/./src/main.js","webpack://segmint-frontend/webpack/bootstrap","webpack://segmint-frontend/webpack/runtime/chunk loaded","webpack://segmint-frontend/webpack/runtime/compat get default export","webpack://segmint-frontend/webpack/runtime/define property getters","webpack://segmint-frontend/webpack/runtime/global","webpack://segmint-frontend/webpack/runtime/harmony module decorator","webpack://segmint-frontend/webpack/runtime/hasOwnProperty shorthand","webpack://segmint-frontend/webpack/runtime/make namespace object","webpack://segmint-frontend/webpack/runtime/node module decorator","webpack://segmint-frontend/webpack/runtime/publicPath","webpack://segmint-frontend/webpack/runtime/jsonp chunk loading","webpack://segmint-frontend/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[(_vm.myNftOpened)?_c('MyNftComponent',{attrs:{\"onClose\":_vm.closeMyNfts}}):_vm._e(),_c('HeaderComponent',{attrs:{\"openMyNfts\":_vm.openMyNfts,\"isEditingMode\":_vm.isEditingMode,\"toggleEditingMode\":_vm.toggleEditingMode}}),_c('CanvasComponent',{attrs:{\"isEditingMode\":_vm.isEditingMode}}),(!_vm.isCollectionLoaded)?_c('div',{staticClass:\"loading-fullscreen\"},[_vm._m(0)]):_vm._e()],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',[_c('h1',[_vm._v(\"Loading collection\")]),_c('div',{staticClass:\"lds-ring\"},[_c('div'),_c('div'),_c('div'),_c('div')])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"header-wrapper\"},[_c('div',{staticClass:\"flex\"},[_c('img',{staticClass:\"logo\",attrs:{\"src\":`${_vm.publicPath}icons/logo.svg`,\"alt\":\"logo\"}}),_c('a',{staticClass:\"secondary-button mode-button\",attrs:{\"href\":\"#\"},on:{\"click\":_vm.$props.toggleEditingMode}},[_vm._v(_vm._s(_vm.isEditingMode ? 'View mode' : 'Mint mode'))]),(_vm.$store.state.Provider.account)?_c('a',{staticClass:\"secondary-button nft-button\",attrs:{\"href\":\"#\"},on:{\"click\":_vm.$props.openMyNfts}},[_vm._v(\"My NFT\")]):_vm._e()]),_c('div',{staticClass:\"description\"},[_c('span',[_vm._v(\"Page \"+_vm._s(_vm.epoch))]),_c('div',{staticClass:\"dot\"}),_c('span',[_vm._v(_vm._s(_vm.pixelPrice)+\" venom per pixel\")])]),(!_vm.$store.state.Provider.account)?_c('div',{staticClass:\"wallet-connect\"},[_c('button',{staticClass:\"primary-button connect\",on:{\"click\":_vm.connect}},[_vm._v(\"Connect wallet\")])]):_c('div',{staticClass:\"flex wallet-info\"},[_c('div',{staticClass:\"info\"},[_c('div',{staticClass:\"address\"},[_vm._v(_vm._s(_vm.address))]),_c('div',{staticClass:\"coins\"},[_vm._v(_vm._s(_vm.balance)+\" VENOM\")])]),_c('img',{staticClass:\"exit\",attrs:{\"src\":`${_vm.publicPath}icons/exit.svg`,\"alt\":\"exit\"},on:{\"click\":_vm.disconnect}})])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"header-wrapper\">\r\n    <div class=\"flex\">\r\n      <img :src=\"`${publicPath}icons/logo.svg`\" alt=\"logo\" class=\"logo\">\r\n      <a href=\"#\" class=\"secondary-button mode-button\" @click='$props.toggleEditingMode'>{{ isEditingMode ? 'View mode' : 'Mint mode' }}</a>\r\n      <a v-if=\"$store.state.Provider.account\" href=\"#\" class=\"secondary-button nft-button\" @click='$props.openMyNfts'>My NFT</a>\r\n    </div>\r\n    <div class=\"description\">\r\n      <span>Page {{epoch}}</span>\r\n      <div class=\"dot\"></div>\r\n      <span>{{pixelPrice}} venom per pixel</span>\r\n    </div>\r\n    <div v-if=\"!$store.state.Provider.account\" class=\"wallet-connect\">\r\n      <button class=\"primary-button connect\" @click=\"connect\">Connect wallet</button>\r\n    </div>\r\n    <div v-else class=\"flex wallet-info\">\r\n      <div class=\"info\">\r\n        <div class=\"address\">{{ address }}</div>\r\n        <div class=\"coins\">{{ balance }} VENOM</div>\r\n      </div>\r\n      <img :src=\"`${publicPath}icons/exit.svg`\" alt=\"exit\" class=\"exit\" @click=\"disconnect\">\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'HeaderComponent',\r\n  data () {\r\n    return {\r\n      publicPath: process.env.BASE_URL\r\n    }\r\n  },\r\n  props: ['openMyNfts', 'isEditingMode', 'toggleEditingMode'],\r\n  computed: {\r\n    address() {\r\n      let str = this.$store.state.Provider.account._address;\r\n      return str.slice(0, 7) + '...' + str.slice(-4);\r\n    },\r\n    balance() {\r\n      return this.$store.state.Provider.venomBalance;\r\n    },\r\n    epoch() {\r\n      return this.$store.state.Provider.epoch;\r\n    },\r\n    pixelPrice() {\r\n      let pixelPrice = parseInt(this.$store.state.Provider.currentTilePrice)/100_000_000_000;\r\n      return (pixelPrice).toString()\r\n    }\r\n  },\r\n  methods: {\r\n    connect(){\r\n      this.$store.dispatch('Provider/connect');\r\n    },\r\n    disconnect(){\r\n      this.$store.dispatch('Provider/disconnect');\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.header-wrapper {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  max-height: 92px;\r\n  padding: 10px 150px;\r\n  box-sizing: border-box;\r\n  background: #7000FF;\r\n  z-index: 8;\r\n  color: #CCFF00;\r\n  border-bottom: solid 2px #CCFF00;\r\n}\r\n\r\n@media screen and (max-width: 1280px){\r\n  .header-wrapper {\r\n    padding: 10px 50px;\r\n  }\r\n}\r\n.logo {\r\n    height: 70px;\r\n    margin-right: 20px;\r\n}\r\n.mode-button {\r\n  width: 150px;\r\n  padding: 5px 10px;\r\n}\r\n\r\n.nft-button {\r\n  margin-left: 10px;\r\n  width: 150px;\r\n  padding: 5px 10px;\r\n}\r\n\r\n.header-wrapper .description {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  margin: 0 20px;\r\n}\r\n.dot {\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: #CCFF00;\r\n  margin: 20px;\r\n}\r\n\r\n.exit {\r\n  height: 30px;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n}\r\n.address {\r\n  font-weight: 700;\r\n}\r\n.coins {\r\n  text-align: end;\r\n  color: var(--primary);\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HeaderComponent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HeaderComponent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HeaderComponent.vue?vue&type=template&id=cae2e4d2&\"\nimport script from \"./HeaderComponent.vue?vue&type=script&lang=js&\"\nexport * from \"./HeaderComponent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./HeaderComponent.vue?vue&type=style&index=0&id=cae2e4d2&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"wrapper\"},[_c('message-modal',{attrs:{\"name\":\"canvas-message-modal\",\"message\":_vm.errorMessage}}),_c('claim-modal',{attrs:{\"name\":\"claim-modal\",\"width\":_vm.selectedWidth,\"height\":_vm.selectedHeight,\"x\":_vm.selectionStartX,\"y\":_vm.selectionStartY,\"onsuccess\":_vm.onClaimModalSuccess,\"onerror\":_vm.onClaimModalError},on:{\"close\":_vm.closeClaimModal}}),_c('div',{staticClass:\"canvas-container\",on:{\"click\":_vm.click,\"mouseup\":_vm.onMouseUp,\"mouseleave\":_vm.onMouseLeave,\"mousedown\":_vm.onMouseDown,\"mousemove\":_vm.onMouseMove}},[_c('canvas',{ref:\"canvas\",staticClass:\"main-canvas\",attrs:{\"width\":\"1000\",\"height\":\"1000\"}}),_c('canvas',{ref:\"canvasOld\",staticClass:\"old-canvas\",style:(_vm.oldCanvasStyles),attrs:{\"width\":\"1000\",\"height\":\"1000\"}}),_c('div',{staticClass:\"hover-popup\",style:(_vm.highLightPopupStyles)},[_vm._v(\" \"+_vm._s(_vm.highlightNftDescription)+\" \")]),_c('div',{style:(_vm.selectionHeaderStyle)},[_vm._v(\" \"+_vm._s(_vm.selectedWidth)+\"x\"+_vm._s(_vm.selectedHeight)+\" \")]),_c('div',{style:(_vm.selectionStyles)}),_vm._l((_vm.badTiles),function(tile){return _c('div',{key:tile.index},[_c('div',{style:(_vm.styleForBadTile(tile))})])}),_c('br')],2),(this.selectionStartX !== null && !this.selectionInProcess)?_c('button',{staticClass:\"primary-button mint-button\",on:{\"click\":_vm.claim}},[_vm._v(\" Mint segment \")]):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('modal',{staticClass:\"claim-modal\",attrs:{\"name\":_vm.$props.name,\"height\":\"auto\"},on:{\"before-close\":_vm.beforeClose,\"before-open\":_vm.beforeOpen}},[_c('div',{staticClass:\"flex modal-content\"},[_c('div',{staticClass:\"claim-modal-header\"},[_vm._v(\" \"+_vm._s(_vm.headerText)+\" \"),_c('img',{staticClass:\"close\",attrs:{\"src\":`${_vm.publicPath}icons/close.svg`,\"alt\":\"close\"},on:{\"click\":function($event){return _vm.$emit('close')}}})]),_c('div',{staticClass:\"flex claim-modal-content\"},[(_vm.claimInProgress)?_c('div',{staticStyle:{\"background-color\":\"rgba(0, 0, 0, 0.3)\",\"position\":\"absolute\",\"left\":\"0\",\"right\":\"0\",\"top\":\"0\",\"bottom\":\"0\"}}):_vm._e(),(!_vm.canBeClaimed)?_c('div',{staticClass:\"instructions\"},[_vm._v(\" Please upload a picture \"+_vm._s(this.width)+\"x\"+_vm._s(this.height)+\"px. \")]):_c('div',{staticClass:\"instructions\"},[_vm._v(\" You have selected a \"+_vm._s(this.width)+\"x\"+_vm._s(this.height)+\"px segment \")]),_c('label',{staticClass:\"file-upload\",attrs:{\"for\":\"assetsFieldHandle\"}},[_c('input',{ref:\"file\",staticClass:\"file-input\",attrs:{\"type\":\"file\",\"multiple\":\"\",\"name\":\"fields[assetsFieldHandle][]\",\"id\":\"assetsFieldHandle\",\"accept\":\".pdf,.jpg,.jpeg,.png\"},on:{\"change\":_vm.onChange}}),_c('button',{staticClass:\"transparent-button\"},[_vm._v(\"Select Image\")])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.canBeClaimed),expression:\"canBeClaimed\"}],staticClass:\"canvasContainer\",style:(_vm.canvasContainerStyles)},[_c('canvas',{ref:\"canvas\",style:(_vm.canvasContainerStyles),attrs:{\"width\":this.$props.width,\"height\":this.$props.height}})]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.canBeClaimed),expression:\"canBeClaimed\"}],staticClass:\"slider\"},[_c('label',{class:{selected: _vm.resizeMode === 'cover'},on:{\"click\":function($event){return _vm.setResizeMode(\"cover\")}}},[_c('div',[_vm._v(\"Cover\")])]),_c('label',{class:{selected: _vm.resizeMode === 'contain'},on:{\"click\":function($event){return _vm.setResizeMode(\"contain\")}}},[_c('div',[_vm._v(\"Contain\")])]),_c('label',{class:{selected: _vm.resizeMode === 'fill'},on:{\"click\":function($event){return _vm.setResizeMode(\"fill\")}}},[_c('div',[_vm._v(\"Fill\")])])]),(_vm.canBeClaimed)?_c('form',[_c('div',{staticClass:\"flex description\"},[_c('label',{attrs:{\"for\":\"description\"}},[_vm._v(\"Title:\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.description),expression:\"description\"}],staticClass:\"input\",attrs:{\"type\":\"text\",\"id\":\"description\",\"maxlength\":\"1000\"},domProps:{\"value\":(_vm.description)},on:{\"input\":function($event){if($event.target.composing)return;_vm.description=$event.target.value}}})]),_c('div',{staticClass:\"flex link\"},[_c('label',{attrs:{\"for\":\"link\"}},[_vm._v(\"Link:\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.link),expression:\"link\"}],staticClass:\"input\",attrs:{\"type\":\"text\",\"id\":\"link\",\"maxlength\":\"1000\"},domProps:{\"value\":(_vm.link)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.link=$event.target.value},function($event){return _vm.inputLink($event)}]}})]),(!_vm.linkValid)?_c('div',{staticClass:\"error\"},[_vm._v(\"Link format is not correct\")]):_vm._e(),_c('button',{staticClass:\"primary-button\",on:{\"click\":_vm.claim}},[_vm._v(\" \"+_vm._s(_vm.$props.id ? 'Edit segment' : `Mint for ${this.mintingPrice} V`)+\" \")])]):_vm._e(),(_vm.claimInProgress)?_c('div',{staticClass:\"claim-in-progress\"},[_c('span',[_vm._v(_vm._s(_vm.$props.id ? 'Edit in progress' : 'Claim in progress'))]),_c('div',{staticClass:\"lds-ring\"},[_c('div'),_c('div'),_c('div'),_c('div')])]):_vm._e()])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { BN } from \"bn.js\";\n\nconst WhiteTile = Array(10 * 10 * 4).fill(255);\nexport function getWhitePixels() {\n  return WhiteTile;\n}\nexport function covertTileColorToPixels(colors) {\n  let pixels = [];\n  for (let y = 0; y < 10; y++) {\n    let r = new BN(colors.r[y]);\n    let g = new BN(colors.g[y]);\n    let b = new BN(colors.b[y]);\n\n    for (let x = 0; x < 10; x++) {\n      // we take 8 bits from uin80 10 times.\n      pixels.push(r.shrn((9 - x) * 8).and(new BN('255', 10)).toNumber());\n      pixels.push(g.shrn((9 - x) * 8).and(new BN('255', 10)).toNumber());\n      pixels.push(b.shrn((9 - x) * 8).and(new BN('255', 10)).toNumber());\n      pixels.push(255)\n    }\n  }\n  return pixels;\n}\n\nexport function encodePixelsToTileColor(pixels) {\n  const tileColor = {\n    r: [],\n    b: [],\n    g: []\n  }\n  for (let y = 0; y < 10; y++) {\n    let r = new BN('0', 10);\n    let g = new BN('0', 10);\n    let b = new BN('0', 10);\n    for (let x = 0; x < 10; x++) {\n      r = r.shln(x === 0 ? 0 : 8).or(new BN(pixels[(x * 4 + 0)  + y * 10 * 4].toString(10), 10))\n      g = g.shln( x === 0 ? 0 : 8).or(new BN(pixels[(x * 4 + 1)  + y * 10 * 4].toString(10), 10))\n      b = b.shln( x === 0 ? 0 : 8).or(new BN(pixels[(x * 4 + 2)  + y * 10 * 4].toString(10), 10))\n    }\n    tileColor.r.push(r.toString(10))\n    tileColor.g.push(g.toString(10))\n    tileColor.b.push(b.toString(10))\n  }\n  return tileColor;\n}\n","<template>\n  <modal class=\"claim-modal\" :name=\"$props.name\" height=\"auto\" @before-close=\"beforeClose\" @before-open='beforeOpen'>\n    <div class=\"flex modal-content\">\n      <div class=\"claim-modal-header\">\n        {{ headerText }}\n        <img :src=\"`${publicPath}icons/close.svg`\" alt=\"close\" class=\"close\" @click=\"$emit('close')\">\n      </div>\n      <div class=\" flex claim-modal-content\">\n        <div v-if=\"claimInProgress\" style=\"background-color: rgba(0, 0, 0, 0.3); position: absolute; left: 0; right: 0; top:0; bottom: 0;\"></div>\n        <div v-if=\"!canBeClaimed\" class=\"instructions\">\n          Please upload a picture {{this.width}}x{{this.height}}px.\n        </div>\n        <div v-else class=\"instructions\">\n          You have selected a {{this.width}}x{{this.height}}px segment\n        </div>\n        <label for=\"assetsFieldHandle\" class=\"file-upload\">\n          <input type=\"file\" multiple name=\"fields[assetsFieldHandle][]\" class=\"file-input\" id=\"assetsFieldHandle\"\n                 @change=\"onChange\" ref=\"file\" accept=\".pdf,.jpg,.jpeg,.png\" />\n          <button class=\"transparent-button\">Select Image</button>\n        </label>\n        <div v-show=\"canBeClaimed\" :style=\"canvasContainerStyles\" class=\"canvasContainer\">\n          <canvas :style=\"canvasContainerStyles\" ref=\"canvas\" :width=\"this.$props.width\" :height=\"this.$props.height\"></canvas>\n        </div>\n        <div  v-show=\"canBeClaimed\" class='slider'>\n          <label :class=\"{selected: resizeMode === 'cover'}\" @click='setResizeMode(\"cover\")'>\n            <div>Cover</div>\n          </label>\n          <label :class=\"{selected: resizeMode === 'contain'}\" @click='setResizeMode(\"contain\")'>\n            <div>Contain</div>\n          </label>\n          <label :class=\"{selected: resizeMode === 'fill'}\" @click='setResizeMode(\"fill\")'>\n            <div>Fill</div>\n          </label>\n        </div>\n        <form v-if=\"canBeClaimed\">\n          <div class=\"flex description\">\n            <label for=\"description\">Title:</label>\n            <input v-model=\"description\" type=\"text\" id=\"description\" class=\"input\" maxlength=\"1000\">\n          </div>\n          <div class=\"flex link\">\n            <label for=\"link\">Link:</label>\n            <input v-model=\"link\" type=\"text\" id=\"link\" class=\"input\" maxlength=\"1000\" @input=\"inputLink($event)\">\n          </div>\n          <div v-if=\"!linkValid\" class=\"error\">Link format is not correct</div>\n          <button class=\"primary-button\" v-on:click=\"claim\">\n            {{$props.id ? 'Edit segment' : `Mint for ${this.mintingPrice} V`}}\n          </button>\n        </form>\n        <div v-if='claimInProgress' class=\"claim-in-progress\">\n          <span>{{$props.id ? 'Edit in progress' : 'Claim in progress'}}</span>\n          <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n        </div>\n      </div>\n    </div>\n  </modal>\n</template>\n\n<script>\nimport {encodePixelsToTileColor} from \"@/utils/pixels\";\nimport Blitz from 'blitz-resize';\n\nexport default {\n  name: 'ClaimModal',\n  data: function () {\n    return {\n      image: null,\n      resizeMode: 'cover',\n      coloredTiles: [],\n      claimInProgress: false,\n      description: '',\n      link: '',\n      publicPath: process.env.BASE_URL,\n      linkValid: true\n    }\n  },\n  props: ['id', 'name', 'x', 'y', 'width', 'height', 'onsuccess', 'onerror', 'onclose'],\n  computed: {\n    canBeClaimed: function() {\n      return this.coloredTiles.length > 0;\n    },\n    canvasContainerStyles: function () {\n      if (this.$props.width > 300 || this.$props.height > 300) {\n        return {\n          margin: 'auto',\n          width: `${this.$props.width}px`,\n          height: `${this.$props.height}px`\n        }\n      } else if (this.$props.width > 60 || this.$props.height > 60) {\n        return {\n          margin: 'auto',\n          width: `${this.$props.width * 2}px`,\n          height: `${this.$props.height * 2}px`\n        }\n      }\n      return {\n        margin: 'auto',\n        width: `${this.$props.width * 4}px`,\n        height: `${this.$props.height * 4}px`\n      }\n    },\n    headerText()  {\n      if (this.canBeClaimed) {\n        if (this.$props.id)\n          return 'Editing';\n        return \"Minting\";\n      } else return \"Choosing a picture\";\n    },\n    mintingPrice() {\n      return (parseInt(this.$store.state.Provider.currentTilePrice) * (this.$props.width * this.$props.height / 100) / 1_000_000_000).toFixed(1);\n    }\n  },\n  methods: {\n    setResizeMode(mode) {\n      this.resizeMode = mode;\n      this.redraw();\n    },\n    redraw() {\n      const ctx = this.$refs.canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = false;\n      const width = this.$props.width;\n      const height = this.$props.height;\n      ctx.fillStyle = 'black';\n      ctx.fillRect(0, 0, width, height);\n      const tiles = [];\n      const blitz = Blitz.create();\n\n      let params;\n      if (this.resizeMode === 'contain') {\n        params = {\n          source: this.image,\n          maxWidth: width,\n          maxHeight: height,\n          minWidth: width/2,\n          minHeight: height/2,\n          proportional: true,\n          output: 'image',\n          quality: 1\n        }\n      } else if (this.resizeMode === 'cover') {\n        const aspectRatio = this.image.width / this.image.height;\n        const canvasAspectRatio = width / height;\n        if (canvasAspectRatio < aspectRatio) {\n          params = {\n            source: this.image,\n            width: Math.floor(height * aspectRatio),\n            height: height,\n            proportional: true,\n            output: 'image',\n            quality: 1\n          }\n        } else {\n          params = {\n            source: this.image,\n            width: width,\n            height: Math.floor(width / aspectRatio),\n            proportional: true,\n            output: 'image',\n            quality: 1\n          }\n        }\n      } else {\n        params = {\n          source: this.image,\n          width:  width,\n          height: height,\n          proportional: false,\n          output: 'image',\n          quality: 1\n        }\n      }\n      blitz(params).then((img) => {\n        if (this.resizeMode === 'contain') {\n          const aspectRatio = img.width / img.height;\n          let drawWidth, drawHeight;\n          if (width / height > aspectRatio) {\n            drawHeight = height;\n            drawWidth = drawHeight * aspectRatio;\n          } else {\n            drawWidth = width;\n            drawHeight = drawWidth / aspectRatio;\n          }\n          const x = (width - drawWidth) / 2;\n          const y = (height - drawHeight) / 2;\n          ctx.drawImage(img, x, y, img.width, img.height);\n        } else if (this.resizeMode === 'cover') {\n          if (img.width > width) {\n            ctx.drawImage(img, -1 * Math.floor((img.width - width)/2), 0, img.width, img.height);\n          } else {\n            ctx.drawImage(img, 0, -1 * Math.floor((img.height - height)/2), img.width, img.height);\n          }\n        } else {\n          ctx.drawImage(img, 0, 0, width, height);\n        }\n        // encode image to array of tiles\n        for (let tileY = 0; tileY < height/10; tileY++) {\n          for (let tileX = 0; tileX < width/10; tileX++) {\n            const data = ctx.getImageData(tileX*10, tileY*10, 10, 10);\n            tiles.push(encodePixelsToTileColor(data.data))\n          }\n        }\n        this.coloredTiles = tiles;\n      })\n    },\n    onChange() {\n      const img = new Image;\n      img.onload = function() {\n        this.image = img;\n        this.redraw();\n      }.bind(this)\n      img.src = URL.createObjectURL(this.$refs.file.files[0]);\n\n    },\n    claim(event) {\n      event.preventDefault();\n      if (this.claimInProgress)\n        return\n\n      const description = this.description;\n      const url = this.link;\n      const urlPattern = /(?:https?):\\/\\/(\\w+:?\\w*)?(\\S+)(:\\d+)?(\\/|\\/([\\w#!:.?+=&%!\\-/]))?/;\n      if(urlPattern.test(url)) {\n        this.linkValid = true;\n        let promise;\n        if (this.$props.id) {\n          promise = this.$store.dispatch('Provider/redrawNft', {id: this.$props.id, x: this.$props.x, y: this.$props.y, width: this.$props.width, height: this.$props.height, tiles: this.coloredTiles, description, url});\n        } else {\n          promise = this.$store.dispatch('Provider/claimTiles', {x: this.$props.x, y: this.$props.y, width: this.$props.width, height: this.$props.height, tiles: this.coloredTiles, description, url});\n        }\n\n        if (promise) {\n          this.claimInProgress = true;\n          promise.then(() => {\n            this.claimInProgress = false;\n            this.$props.onsuccess();\n          }).catch((err) => {\n            console.log(err);\n            this.claimInProgress = false;\n            if (!this.$props.id && err.code !== 3) {\n              console.log('on error');\n              this.onerror(err.message);\n            }\n          })\n        }\n      } else {\n        this.linkValid = false;\n      }\n    },\n    beforeClose(event) {\n      if (this.claimInProgress)\n        event.cancel();\n    },\n    beforeOpen() {\n      this.description = '';\n      this.link = '';\n      this.coloredTiles = [];\n    },\n    inputLink(){\n      this.linkValid = true;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.canvasContainer {\n  margin-top: 10px !important;\n}\ncanvas {\n  image-rendering: pixelated;\n}\n\n.claim-modal {\n  background-color: rgb(59 0 135 / 50%);\n}\n.claim-modal-header {\n  width: 100%;\n  padding: 0 10px 10px 10px;\n  text-align: center;\n  background: #7000FF;\n  color: var(--primary);\n  font-family: \"ChakraPetch\", Helvetica, Arial;\n  font-size: 24px;\n  line-height: 30px;\n  font-weight: 700;\n}\n.claim-modal-header img.close {\n  position: absolute;\n  top: 8px;\n  right: 10px;\n  width: 15px;\n  height: 15px;\n  cursor: pointer;\n}\n.modal-content {\n  position: fixed;\n  top: 10%;\n  left: calc(50% - 166px);\n  flex-direction: column;\n  min-width: 300px;\n  background-color: #21004B;\n  border: 10px solid #7000FF;\n  color: #CCFF00;\n}\n.claim-modal-content {\n  flex-direction: column;\n  padding: 20px;\n}\n.instructions {\n  font-weight: 700;\n  margin: 0 20px 20px;\n}\n.file-upload {\n  position: relative;\n  cursor: pointer;\n}\n.file-upload button {\n  pointer-events: none;\n}\n.file-input {\n  visibility: hidden;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\nform {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n}\nform label {\n  width: 60px;\n}\nform button {\n  width: 200px;\n  align-self: center;\n  margin-top: 20px;\n}\n.description, .link {\n  margin-bottom: 10px;\n}\n.claim-in-progress {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  background-color: #21004B;\n  color: var(--primary);\n  font-weight: 700;\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  flex-direction: column;\n  align-items: center;\n  font-size: 40px;\n}\n.claim-in-progress span {\n  display: block;\n  width: 100%;\n}\n.lds-ring {\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n}\n.lds-ring div {\n  box-sizing: border-box;\n  display: block;\n  position: absolute;\n  width: 64px;\n  height: 64px;\n  margin: 8px;\n  border: 8px solid var(--primary);\n  border-radius: 50%;\n  animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  border-color: var(--primary) transparent transparent transparent;\n}\n.lds-ring div:nth-child(1) {\n  animation-delay: -0.45s;\n}\n.lds-ring div:nth-child(2) {\n  animation-delay: -0.3s;\n}\n.lds-ring div:nth-child(3) {\n  animation-delay: -0.15s;\n}\n@keyframes lds-ring {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.error {\n  color: red;\n}\n\n.slider {\n  width:100%;\n  margin-top: 10px;\n  box-sizing:border-box;\n  text-align:center;\n  position:relative;\n  border-radius:2px;\n}\n\n.slider::after {\n  content:\"\";\n  display:block;\n  clear:both;\n}\n\n.slider label {\n  float:left;\n  color: var(--primary);\n  //background: var(--violet);\n  width: calc(33.333% - 1px);\n  position:relative;\n  padding: 10px 0px 10px;\n  overflow:hidden;\n  transition:color 0.3s;\n  cursor:pointer;\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n  border: 2px solid var(--primary);\n  box-sizing: border-box;\n}\n\n.slider label input {\n  position:absolute;\n  top:-200%;\n}\n\n.slider label.selected {\n  color: var(--violet);\n  background: var(--primary);\n}\n\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ClaimModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ClaimModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ClaimModal.vue?vue&type=template&id=b7e90ce4&scoped=true&\"\nimport script from \"./ClaimModal.vue?vue&type=script&lang=js&\"\nexport * from \"./ClaimModal.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ClaimModal.vue?vue&type=style&index=0&id=b7e90ce4&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b7e90ce4\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('modal',{staticClass:\"message-modal\",attrs:{\"name\":_vm.$props.name,\"height\":\"auto\"}},[_c('div',{staticClass:\"flex modal-content\"},[_c('div',{staticClass:\"flex message-modal-content\"},[_c('div',{staticClass:\"instructions\"},[_vm._v(\" \"+_vm._s(_vm.$props.message)+\" \")]),_c('button',{staticClass:\"primary-button\",on:{\"click\":this.close}},[_vm._v(\" Close \")])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <modal class=\"message-modal\" :name=\"$props.name\" height=\"auto\">\n    <div class=\"flex modal-content\">\n      <div class=\" flex message-modal-content\">\n        <div class=\"instructions\">\n          {{$props.message}}\n        </div>\n        <button class=\"primary-button\" v-on:click=\"this.close\">\n          Close\n        </button>\n      </div>\n    </div>\n  </modal>\n</template>\n\n<script>\nexport default {\n  name: 'MessageModal',\n  data: function () {\n    return {}\n  },\n  props: ['name', 'message'],\n  computed: {},\n  methods: {\n    close() {\n      this.$modal.hide(this.name);\n    }\n  },\n\n}\n</script>\n\n<style scoped>\n.message-modal {\n  background-color: rgb(59 0 135 / 50%);\n  z-index: 9;\n}\n.modal-content {\n  position: fixed;\n  top: 10%;\n  left: calc(50% - 166px);\n  flex-direction: column;\n  min-width: 300px;\n  background-color: #21004B;\n  border: 10px solid #7000FF;\n  color: #CCFF00;\n}\n.message-modal-content {\n  flex-direction: column;\n  padding: 20px;\n}\n.instructions {\n  font-weight: 700;\n  font-size: 24px;\n  margin: 0 20px 20px;\n  max-width: 300px;\n  text-align: center;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MessageModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MessageModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MessageModal.vue?vue&type=template&id=e14c4b00&scoped=true&\"\nimport script from \"./MessageModal.vue?vue&type=script&lang=js&\"\nexport * from \"./MessageModal.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MessageModal.vue?vue&type=style&index=0&id=e14c4b00&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e14c4b00\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"wrapper\">\r\n    <message-modal name='canvas-message-modal' :message='errorMessage'/>\r\n    <claim-modal name='claim-modal' :width=\"selectedWidth\" :height=\"selectedHeight\" :x=\"selectionStartX\" :y=\"selectionStartY\" :onsuccess=\"onClaimModalSuccess\" :onerror='onClaimModalError' @close=\"closeClaimModal\"/>\r\n    <div class=\"canvas-container\" v-on:click=\"click\" @mouseup=\"onMouseUp\" @mouseleave=\"onMouseLeave\" @mousedown=\"onMouseDown\" @mousemove=\"onMouseMove\">\r\n      <canvas class='main-canvas' ref=\"canvas\" width=\"1000\" height=\"1000\"></canvas>\r\n      <canvas :style='oldCanvasStyles' class='old-canvas' ref=\"canvasOld\" width=\"1000\" height=\"1000\"></canvas>\r\n      <div class=\"hover-popup\" :style=\"highLightPopupStyles\">\r\n        {{highlightNftDescription}}\r\n      </div>\r\n      <div :style=\"selectionHeaderStyle\">\r\n        {{ selectedWidth }}x{{selectedHeight}}\r\n      </div>\r\n      <div :style=\"selectionStyles\"></div>\r\n      <div v-for=\"tile in badTiles\" v-bind:key=\"tile.index\">\r\n        <div :style=\"styleForBadTile(tile)\" />\r\n      </div>\r\n      <br />\r\n    </div>\r\n    <button class=\"primary-button mint-button\" v-if=\"this.selectionStartX !== null && !this.selectionInProcess\" v-on:click=\"claim\">\r\n      <!-- SegMint pixels {{this.selectionEndX - this.selectionStartX + 10}}x{{this.selectionEndY - this.selectionStartY + 10}} -->\r\n      Mint segment\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ClaimModal from \"@/components/ClaimModal.vue\";\r\nimport MessageModal from '@/components/MessageModal.vue'\r\n\r\n// import zoomMixin from \"@/mixins/zoom\"\r\n\r\nexport default {\r\n  name: 'CanvasComponent',\r\n  components: {ClaimModal, MessageModal},\r\n  // mixins: [zoomMixin],\r\n  props: ['isEditingMode'],\r\n  data() {\r\n    return {\r\n      ctx: null,\r\n      ctxOld: null,\r\n      imageData: null,\r\n      isMobile: false,\r\n      collectionLoaded: false,\r\n      // to claim the tiles\r\n      selectionInProcess: false,\r\n      selectionStartX: null,\r\n      selectionStartY: null,\r\n      selectionEndX: null,\r\n      selectionEndY: null,\r\n      // to show nftDescription\r\n      highLightNftId: null,\r\n      lastMousePosX: 0,\r\n      lastMousePosY: 0,\r\n      selectionTriedCounter: 0,\r\n      errorMessage: ''\r\n    }\r\n  },\r\n  computed: {\r\n    hideOldCanvas: function() {\r\n      return this.isEditingMode || this.selectionTriedCounter > 0 || this.selectionInProcess;\r\n    },\r\n    oldCanvasStyles: function() {\r\n      if (this.hideOldCanvas) {\r\n        return {}\r\n      } else {\r\n        return {\r\n          visibility: 'visible',\r\n          opacity: 1,\r\n          transition: 'opacity 250ms ease-in, visibility 0ms ease-in 0ms'\r\n        };\r\n      }\r\n    },\r\n    badTiles: function() {\r\n      if (this.selectionStartX === null)\r\n        return [];\r\n      let sX = this.selectionStartX;\r\n      let sY = this.selectionStartY;\r\n      let endX = this.selectionEndX;\r\n      let endY = this.selectionEndY;\r\n      let badSelectedTiles = [];\r\n      for (let x = sX; x <= endX; x += 10) {\r\n        for (let y = sY; y <= endY; y += 10) {\r\n          const index = x * 10 + y/10;\r\n          const tileInStore = this.$store.state.Provider.tilesByIndex[index];\r\n          if (tileInStore.epoch === this.$store.state.Provider.epoch && tileInStore.nftId !== '4294967295') {\r\n            badSelectedTiles.push(tileInStore);\r\n          }\r\n        }\r\n      }\r\n      return badSelectedTiles;\r\n    },\r\n    selectedTilesCount: function () {\r\n      if (this.selectionStartX === null || this.selectionStartY === null)\r\n        return 0;\r\n      return (this.selectionEndX - this.selectionStartX + 10) / 10 * (this.selectionEndY - this.selectionStartY + 10) / 10;\r\n    },\r\n    tiles: function() {\r\n      return this.$store.state.Provider.tiles;\r\n    },\r\n    selectedWidth: function () {\r\n      return this.selectionEndX - this.selectionStartX + 10\r\n    },\r\n    selectedHeight: function () {\r\n      return this.selectionEndY - this.selectionStartY + 10\r\n    },\r\n    selectedPriceUSD: function () {\r\n      return this.selectedWidth * this.selectedHeight * 1_000_000_000;\r\n    },\r\n    highLightPopupStyles: function() {\r\n      // When we hover some nft, we show popup with text\r\n      if (this.highLightNftId && !this.selectionInProcess) {\r\n        const left = this.lastMousePosX > 600;\r\n        return {\r\n          top: `${this.lastMousePosY}px`,\r\n          left: `${left ? this.lastMousePosX - 235 : this.lastMousePosX + 15}px`,\r\n          width: '200px',\r\n          minHeight: '20px'\r\n        }\r\n      } else {\r\n        return {\r\n          display: 'none'\r\n        }\r\n      }\r\n    },\r\n    highlightNftDescription() {\r\n      let mapping = this.$store.state.Provider.nftDataById;\r\n      let nft = mapping[this.highLightNftId];\r\n      if (nft) {\r\n        return nft.description;\r\n      }\r\n      return '';\r\n    },\r\n    selectionStyles: function () {\r\n      // Style for dynamic selection\r\n      if (this.selectionStartX !== null) {\r\n        return {\r\n          position: 'absolute',\r\n          left: `${this.selectionStartX}px`,\r\n          top: `${this.selectionStartY}px`,\r\n          width: `${this.selectionEndX - this.selectionStartX + 10}px`,\r\n          height: `${this.selectionEndY - this.selectionStartY + 10}px`,\r\n          backgroundColor: 'rgba(204,255,0,0.5)'\r\n        }\r\n      }\r\n      return {\r\n        position: 'absolute',\r\n        left: 0,\r\n        top: 0,\r\n        width: 0,\r\n        height: 0,\r\n        backgroundColor: 'rgba(204,255,0,0.5)'\r\n      }\r\n    },\r\n    selectionHeaderStyle: function () {\r\n      if (this.selectionStartX !== null) {\r\n        if (this.selectionStartY > 100 ) {\r\n          return {\r\n            position: 'absolute',\r\n            left: `${(this.selectionStartX + this.selectionEndX)/2 - 30}px`,\r\n            top: `${this.selectionStartY - 25}px`,\r\n            width: `60px`,\r\n            height: `20px`,\r\n            borderRadius: '5px',\r\n            backgroundColor: 'yellow',\r\n            textAlign: 'center'\r\n          }\r\n          // Above selection\r\n        } else {\r\n          // Below selection\r\n          return {\r\n            position: 'absolute',\r\n            left: `${(this.selectionStartX + this.selectionEndX)/2 - 30}px`,\r\n            top: `${this.selectionEndY + 15}px`,\r\n            width: `60px`,\r\n            height: `20px`,\r\n            borderRadius: '5px',\r\n            backgroundColor: 'yellow',\r\n            textAlign: 'center'\r\n          }\r\n        }\r\n      } else {\r\n        return {\r\n          display: 'none',\r\n          position: 'absolute',\r\n          left: 0,\r\n          top: 0,\r\n          width: 0,\r\n          height: 0,\r\n          backgroundColor: 'rgba(204,255,0,0.5)'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.ctx = this.$refs.canvas.getContext('2d');\r\n    this.ctxOld = this.$refs.canvasOld.getContext('2d');\r\n    this.imageData = this.ctx.createImageData(10, 10);\r\n    this.$store.subscribe((mutation) => {\r\n      if (mutation.type === 'Provider/setCollection') {\r\n        this.redraw(mutation.payload.tilesByIndex, this.$store.state.Provider.epoch);\r\n      } else if (mutation.type === 'Provider/setTile') {\r\n        this.drawTile(mutation.payload.tile, this.$store.state.Provider.epoch);\r\n      } else if (mutation.type === 'Provider/setEpoch') {\r\n        // Epoch is changed, redraw everything\r\n        this.redraw(this.$store.state.Provider.tilesByIndex, mutation.payload.epoch);\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    clearSelection() {\r\n      this.selectionInProcess = false;\r\n      this.selectionStartX = null;\r\n      this.selectionStartY = null;\r\n      this.selectionEndX = null;\r\n      this.selectionEndY = null;\r\n    },\r\n    drawTile(tile, epoch) {\r\n      this.imageData.data.set(tile.pixels);\r\n      if (tile.epoch === epoch) {\r\n        this.ctx.putImageData(this.imageData, tile.x, tile.y);\r\n        this.ctxOld.clearRect(tile.x, tile.y, 10, 10);\r\n      } else {\r\n        this.ctxOld.putImageData(this.imageData, tile.x, tile.y);\r\n      }\r\n    },\r\n    redraw(tiles, epoch) {\r\n      // TODO do not redraw everything\r\n      this.ctx.clearRect(0, 0, 1000, 1000);\r\n      this.ctxOld.clearRect(0, 0, 1000, 1000);\r\n      for (let key in tiles) {\r\n        this.imageData.data.set(tiles[key].pixels);\r\n        if (tiles[key].epoch === epoch) {\r\n          this.ctx.putImageData(this.imageData, tiles[key].x, tiles[key].y);\r\n        } else {\r\n          this.ctxOld.putImageData(this.imageData, tiles[key].x, tiles[key].y);\r\n        }\r\n      }\r\n      this.collectionLoaded = true;\r\n    },\r\n    styleForBadTile: function (tile) {\r\n      // Style for one tile (10x10) in case\r\n      // Selection overlaps already purchased tile\r\n      return {\r\n        position: 'absolute',\r\n        left: `${tile.x}px`,\r\n        top: `${tile.y}px`,\r\n        width: `10px`,\r\n        height: `10px`,\r\n        backgroundColor: 'red'\r\n      }\r\n    },\r\n    onMouseDown(event) {\r\n      if (this.isMobile || !this.collectionLoaded)\r\n        return;\r\n\r\n      // this is tricky to show empty tiles\r\n      setTimeout(() => {\r\n        if (this.selectionInProcess) {\r\n          this.selectionTriedCounter += 1;\r\n          setTimeout(() => {\r\n            this.selectionTriedCounter -= 1;\r\n          }, 5000);\r\n        }\r\n      }, 200);\r\n\r\n      const canvasRect = this.$refs.canvas.getBoundingClientRect();\r\n      let xPos = Math.floor((event.clientX - canvasRect.left)/10)*10;\r\n      let yPos = Math.floor((event.clientY - canvasRect.top)/10)*10;\r\n      if (xPos < 0 || xPos > 990 || yPos < 0 || yPos > 990)\r\n        return;\r\n      this.selectionInProcess = true;\r\n      this.selectionStartX = xPos;\r\n      this.selectionStartY = yPos;\r\n      this.selectionEndX = xPos;\r\n      this.selectionEndY = yPos;\r\n    },\r\n    onMouseMove(event) {\r\n      if (this.isMobile || !this.collectionLoaded)\r\n        return\r\n\r\n      const canvasRect = this.$refs.canvas.getBoundingClientRect();\r\n      let coordX = event.clientX - canvasRect.left;\r\n      let coordY = event.clientY - canvasRect.top;\r\n\r\n      let xPos = Math.floor(coordX/10)*10;\r\n      let yPos = Math.floor(coordY/10)*10;\r\n      if (xPos < 0 || xPos > 990 || yPos < 0 || yPos > 990) {\r\n        return;\r\n      }\r\n\r\n      if (!this.selectionInProcess) {\r\n        // highlight popup logic\r\n        this.lastMousePosX = coordX;\r\n        this.lastMousePosY = coordY;\r\n        const index = xPos * 10 + yPos/10;\r\n        const tileInStore = this.$store.state.Provider.tilesByIndex[index];\r\n        if (tileInStore && tileInStore.nftId !== '4294967295' && tileInStore.nftId !== this.highLightNftId && (!this.hideOldCanvas || tileInStore.epoch === this.$store.state.Provider.epoch)) {\r\n          this.highLightNftId = tileInStore.nftId;\r\n          setTimeout(() => {\r\n            if (this.highLightNftId === tileInStore.nftId) {\r\n              this.$store.dispatch('Provider/fetchNftData', {id: tileInStore.nftId});\r\n            }\r\n          }, 1000);\r\n        } else if(tileInStore.nftId !== this.highLightNftId) {\r\n          this.highLightNftId = null;\r\n        }\r\n        return;\r\n      }\r\n\r\n      // Some tricky logic to keep max selected piece in range 0..10000 pixels\r\n      if (xPos <= this.selectionEndX) {\r\n        this.selectionEndX = Math.max(xPos, this.selectionStartX);\r\n      } else {\r\n        while (xPos > this.selectionEndX) {\r\n          let newTilesCount = (this.selectionEndX - this.selectionStartX + 20) * (this.selectionEndY - this.selectionStartY + 10);\r\n          if (newTilesCount <= 9000) {\r\n            this.selectionEndX += 10\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (yPos <= this.selectionEndY) {\r\n        this.selectionEndY = Math.max(yPos, this.selectionStartY);\r\n      } else {\r\n        while (yPos > this.selectionEndY) {\r\n          let newTilesCount = (this.selectionEndX - this.selectionStartX + 10) * (this.selectionEndY - this.selectionStartY + 20);\r\n          if (newTilesCount <= 9000) {\r\n            this.selectionEndY += 10;\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    onMouseUp() {\r\n      if (this.isMobile || !this.collectionLoaded)\r\n        return\r\n      this.selectionInProcess = false;\r\n      if (this.selectionStartX !== null && this.selectionStartX === this.selectionEndX && this.selectionStartY === this.selectionEndY && this.highLightNftId) {\r\n\r\n        let nft = this.$store.state.Provider.nftDataById[this.highLightNftId];\r\n        if (nft && nft.url) {\r\n          window.open(nft.url, '_blank');\r\n        }\r\n\r\n      }\r\n      if (this.badTiles.length > 0) {\r\n        this.clearSelection();\r\n      }\r\n    },\r\n    onMouseLeave() {\r\n      if (this.isMobile)\r\n        return\r\n      if (this.selectionInProcess) {\r\n        this.clearSelection();\r\n      }\r\n      this.highLightNftId = null;\r\n    },\r\n    click(event) {\r\n      // Need to test on mobile\r\n      if (!this.isMobile || !this.collectionLoaded) {\r\n        return;\r\n      }\r\n\r\n      const canvasRect = this.$refs.canvas.getBoundingClientRect();\r\n      //Logic to select the tiles to claim.\r\n      let xPos = event.clientX - canvasRect.left;\r\n      let yPos = event.clientY - canvasRect.top;\r\n\r\n      let tileX = Math.floor(xPos / 10) * 10;\r\n      let tileY = Math.floor(yPos / 10) * 10;\r\n\r\n      if (this.selectionStartX !== null && this.selectionStartX === this.selectionEndX && this.selectionStartY === this.selectionEndY) {\r\n        let prevState = {\r\n          selectionStartX: this.selectionStartX,\r\n          selectionStartY: this.selectionStartY,\r\n          selectionEndX: this.selectionEndX,\r\n          selectionEndY: this.selectionEndY\r\n        }\r\n        this.selectionStartX = Math.min(tileX, prevState.selectionStartX);\r\n        this.selectionStartY = Math.min(tileY, prevState.selectionStartY);\r\n        this.selectionEndX = Math.max(tileX, prevState.selectionEndX);\r\n        this.selectionEndY = Math.max(tileY, prevState.selectionEndY);\r\n      } else {\r\n        this.selectionStartX = tileX;\r\n        this.selectionStartY = tileY;\r\n        this.selectionEndX = tileX;\r\n        this.selectionEndY = tileY;\r\n      }\r\n\r\n      // Maximum one time claim is 100 tiles - 10000 pixels\r\n      // So crop big selections\r\n      while ((this.selectionEndX - this.selectionStartX + 10) * (this.selectionEndY - this.selectionStartY + 10) > 10000) {\r\n        // Funny random\r\n        // Todo, think about better crop\r\n        if (Math.random() > 0.5) {\r\n          if (this.selectionEndX > this.selectionStartX) {\r\n            this.selectionEndX -= 10;\r\n          }\r\n        } else {\r\n          if (this.selectionEndY > this.selectionStartY) {\r\n            this.selectionEndY -= 10;\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log('no error?')\r\n      // Check is there is no empty tiles in selection\r\n      const notEmptyTilesInSelection = this.tiles.filter(t =>\r\n          t.nftId !== '4294967295' &&\r\n          t.x >= this.selectionStartX &&\r\n          t.y >= this.selectionStartY &&\r\n          t.x <= this.selectionEndX &&\r\n          t.y <= this.selectionEndY\r\n      )\r\n\r\n      // todo smart crop if there are busy tiles\r\n      // for (let busyTile of notEmptyTilesInSelection) {\r\n      //   if (this.selectionStartX <= busyTile.x)\r\n      //     this.selectionStartX = busyTile.x + 10;\r\n      //   if (this.selectionStartY <= busyTile.y)\r\n      //     this.selectionStartY = busyTile.y + 10;\r\n      //\r\n      //   if (this.selectionEndX >= busyTile.x)\r\n      //     this.selectionEndX = busyTile.x - 10;\r\n      //   if (this.selectionEndY <= busyTile.x)\r\n      //     this.selectionEndY = busyTile.y - 10;\r\n      // }\r\n\r\n      // Cancel selection\r\n      if (notEmptyTilesInSelection.length !== 0) {\r\n        // TODO show toast notification\r\n        // TILES ARE NOT EMPTY\r\n        this.selectionStartX = null;\r\n        this.selectionStartY = null;\r\n        this.selectionEndX = null;\r\n        this.selectionEndY = null;\r\n      }\r\n    },\r\n    claim() {\r\n      if (this.$store.state.Provider.account) {\r\n        this.$modal.show('claim-modal');\r\n      } else {\r\n        this.$store.dispatch('Provider/connect');\r\n      }\r\n    },\r\n    onClaimModalSuccess() {\r\n      this.clearSelection();\r\n      this.$modal.hide('claim-modal');\r\n    },\r\n    onClaimModalError(errorMessage) {\r\n      this.errorMessage = errorMessage;\r\n      this.$modal.hide('claim-modal');\r\n      this.$modal.show('canvas-message-modal');\r\n    },\r\n    closeClaimModal(){\r\n      this.$modal.hide('claim-modal');\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.wrapper {\r\n  font-family: \"ChakraPetch\", Helvetica, Arial;\r\n}\r\n.canvas-container {\r\n  margin: 100px auto 50px;\r\n  position: relative;\r\n  width: 1000px;\r\n  height: 1000px;\r\n  user-select: none;\r\n}\r\n\r\n.main-canvas {\r\n  user-select: none;\r\n  box-sizing: border-box;\r\n  background-image: repeating-linear-gradient(#7000FF 0 1px, transparent 1px 100px), repeating-linear-gradient(90deg, #7000FF 0 1px, transparent 1px 100px);\r\n  background-size: 10px 10px;\r\n  background-color: #21004B;\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n}\r\n\r\n.old-canvas {\r\n  user-select: none;\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  margin: 0;\r\n  padding: 0;\r\n  visibility: hidden;\r\n  opacity: 0;\r\n  transition: opacity 250ms ease-in, visibility 0ms ease-in 250ms;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  0% { opacity: 0; }\r\n  100% { opacity: 1; }\r\n}\r\n\r\n@keyframes fadeOut {\r\n  0% { opacity: 1%; }\r\n  100% { opacity: 0; }\r\n}\r\n\r\n\r\n.mint-button {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  left: calc(50% - 80px);\r\n  font-family: inherit;\r\n  cursor: pointer;\r\n  z-index: 2;\r\n}\r\n\r\n.hover-popup {\r\n  color: white;\r\n  position: absolute;\r\n  font-weight: bold;\r\n  padding: 10px;\r\n  background-color: rgba(0,0,0,0.8);\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CanvasComponent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CanvasComponent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CanvasComponent.vue?vue&type=template&id=c40f4dee&scoped=true&\"\nimport script from \"./CanvasComponent.vue?vue&type=script&lang=js&\"\nexport * from \"./CanvasComponent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CanvasComponent.vue?vue&type=style&index=0&id=c40f4dee&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c40f4dee\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"full-screen-popup\"},[_c('message-modal',{attrs:{\"name\":\"nft-message-modal\",\"message\":_vm.message}}),_c('div',{staticClass:\"full-screen-popup-fade\",on:{\"click\":_vm.$props.onClose}}),_c('div',{staticClass:\"my-nft-wrapper\"},[_c('div',{staticClass:\"my-nft-header\"},[_vm._v(\" My NFTs \"),_c('img',{staticClass:\"close\",attrs:{\"src\":`${_vm.publicPath}icons/close.svg`,\"alt\":\"close\"},on:{\"click\":_vm.$props.onClose}})]),_c('div',{staticClass:\"my-nft-container\"},_vm._l((_vm.nfts),function(nft){return _c('div',{key:nft.id,staticClass:\"my-nft\"},[_c('OneNftComponent',{attrs:{\"onError\":_vm.onError,\"address\":nft.address,\"id\":nft.id,\"lockedAmount\":nft.lockedAmount,\"x\":nft.x,\"y\":nft.y,\"width\":nft.width,\"height\":nft.height,\"description\":nft.description,\"url\":nft.url,\"onedit\":_vm.onEdit}})],1)}),0)]),_c('claim-modal',{attrs:{\"name\":\"edit-modal\",\"id\":_vm.editNftId,\"width\":_vm.editNftWidth,\"height\":_vm.editNftHeight,\"x\":_vm.editNftX,\"y\":_vm.editNftY,\"onsuccess\":_vm.onModalSuccess},on:{\"close\":_vm.closEditModal}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"nft-container\"},[_c('div',{staticClass:\"canvas-container\",style:(_vm.canvasStyles)},[_c('a',{attrs:{\"href\":_vm.scanLink,\"target\":\"_blank\"}},[_c('canvas',{ref:\"canvas\",style:(_vm.canvasStyles),attrs:{\"width\":this.$props.width,\"height\":this.$props.height}})])]),_c('div',{staticClass:\"nft-info-container\"},[_c('div',{staticClass:\"nft-info-title\"},[_c('a',{attrs:{\"href\":_vm.$props.url,\"target\":\"_blank\"}},[_vm._v(\" \"+_vm._s(this.$props.description)+\" \")])]),_c('div',{staticClass:\"secondary-button nft-info-button\",on:{\"click\":_vm.edit}},[_c('span',[_vm._v(\" Edit \")]),_c('img',{staticClass:\"edit-icon\",attrs:{\"src\":`${_vm.publicPath}icons/edit.svg`,\"alt\":\"edit\"}})]),_c('div',{staticClass:\"secondary-button nft-info-button\",on:{\"click\":_vm.burn}},[_c('span',[_vm._v(\" Burn \")]),_c('img',{staticClass:\"burn-icon\",attrs:{\"src\":`${_vm.publicPath}icons/burn.svg`,\"alt\":\"burn\"}})])]),_c('div',{staticClass:\"nft-subinfo-container\"},[_c('p',[_vm._v(\" \"+_vm._s(this.visiblyText)+\" \")]),_c('p',[_vm._v(\" Locked value: \"+_vm._s(this.beautyValue)+\" Venom \")])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"nft-container\">\r\n    <div :style=\"canvasStyles\" class=\"canvas-container\">\r\n      <a :href=\"scanLink\" target='_blank'>\r\n        <canvas :style=\"canvasStyles\" ref=\"canvas\" :width=\"this.$props.width\" :height=\"this.$props.height\"></canvas>\r\n      </a>\r\n    </div>\r\n    <div class='nft-info-container'>\r\n      <div class='nft-info-title'>\r\n        <a :href='$props.url' target='_blank'>\r\n          {{this.$props.description}}\r\n        </a>\r\n      </div>\r\n      <div class='secondary-button nft-info-button' @click='edit'>\r\n        <span>\r\n          Edit\r\n        </span>\r\n        <img :src=\"`${publicPath}icons/edit.svg`\" alt=\"edit\" class=\"edit-icon\">\r\n      </div>\r\n      <div class='secondary-button nft-info-button' @click='burn'>\r\n        <span>\r\n          Burn\r\n        </span>\r\n        <img :src=\"`${publicPath}icons/burn.svg`\" alt=\"burn\" class=\"burn-icon\">\r\n      </div>\r\n    </div>\r\n    <div class='nft-subinfo-container'>\r\n      <p>\r\n        {{ this.visiblyText }}\r\n      </p>\r\n      <p>\r\n        Locked value: {{this.beautyValue}} Venom\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'OneNft',\r\n  data () {\r\n    return {\r\n      publicPath: process.env.BASE_URL\r\n    }\r\n  },\r\n  props: ['id', 'address', 'x', 'y', 'width', 'height', 'description', 'url', 'onedit', 'lockedAmount', 'onError'],\r\n  computed: {\r\n    canvasStyles: function () {\r\n      const height = 250/this.$props.width * this.$props.height;\r\n      return {\r\n        margin: '3px auto',\r\n        width: `100%`,\r\n        height: `${height}px`\r\n      }\r\n    },\r\n    scanLink: function() {\r\n      return `https://devnet.venomscan.com/accounts/${this.$props.address.toString()}`;\r\n    },\r\n    beautyValue: function() {\r\n      return (parseInt(this.$props.lockedAmount)/1_000_000_000).toFixed(2)\r\n    },\r\n    visiblyText: function () {\r\n      if (this.isFullyVisible) {\r\n        return `This segment is fully visible.`;\r\n      } else if (this.isPartialVisible) {\r\n        return `This segment is partially visible.`;\r\n      } else {\r\n        return `This segment is invisible.`;\r\n      }\r\n    },\r\n    isFullyVisible: function() {\r\n      let fullyVisible = true;\r\n      for (let x = this.$props.x; x < this.$props.x + this.$props.width; x += 10) {\r\n        for (let y = this.$props.y; y < this.$props.y + this.$props.height; y += 10) {\r\n          const index = x * 10 + y/10;\r\n          if (this.$store.state.Provider.tilesByIndex[index].nftId !== this.$props.id) {\r\n            fullyVisible = false;\r\n            break;\r\n          }\r\n        }\r\n        if (!fullyVisible)\r\n          break;\r\n      }\r\n      return fullyVisible;\r\n    },\r\n    isPartialVisible: function() {\r\n      let isPartialVisible = false;\r\n      for (let x = this.$props.x; x < this.$props.x + this.$props.width; x += 10) {\r\n        for (let y = this.$props.y; y < this.$props.y + this.$props.height; y += 10) {\r\n          const index = x * 10 + y/10;\r\n          if (this.$store.state.Provider.tilesByIndex[index].nftId === this.$props.id) {\r\n            isPartialVisible = true;\r\n            break;\r\n          }\r\n        }\r\n        if (isPartialVisible)\r\n          break;\r\n      }\r\n      return isPartialVisible;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.redraw();\r\n  },\r\n  methods: {\r\n    edit() {\r\n      if (this.isPartialVisible) {\r\n        this.$props.onedit(this.$props.id, this.$props.x, this.$props.y, this.$props.width, this.$props.height);\r\n      } else {\r\n        this.onError(`Your nft was completely covered by new NFTs and become invisible. You can burn it to get locked value back.`);\r\n      }\r\n    },\r\n    burn() {\r\n      if (this.isFullyVisible) {\r\n        this.onError(`Your NFT can only be burned if it is completely covered by new NFTs.`);\r\n      } else if (this.isPartialVisible) {\r\n        this.onError(`Your NFT can only be burned if it is completely covered by new NFTs. Now it is partially visible.`);\r\n      } else {\r\n        this.$store.dispatch('Provider/burnNft', this.$props.id);\r\n      }\r\n    },\r\n    floorPrice() {\r\n      return this.$props.width * this.$props.height\r\n    },\r\n    redraw() {\r\n      const ctx = this.$refs.canvas.getContext('2d');\r\n      const imageData = ctx.createImageData(10, 10);\r\n      for (let x = this.$props.x; x < this.$props.x + this.$props.width; x += 10) {\r\n        for (let y = this.$props.y; y < this.$props.y + this.$props.height; y += 10) {\r\n          const index = x * 10 + y/10;\r\n          const tileInStore = this.$store.state.Provider.tilesByIndex[index];\r\n          if (tileInStore) {\r\n            imageData.data.set(tileInStore.pixels);\r\n            ctx.putImageData(imageData, x - this.$props.x, y - this.$props.y);\r\n          }\r\n        }\r\n      }\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.nft-container {\r\n  width: 254px;\r\n  border: solid 2px #7000FF;\r\n  padding-bottom: 10px;\r\n}\r\n.canvas-container {\r\n  width: 100%;\r\n  border-bottom: solid 2px #7000FF;\r\n  margin-bottom: 3px;\r\n}\r\ncanvas {\r\n  image-rendering: pixelated;\r\n}\r\n\r\n.nft-info-container {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.nft-info-title {\r\n  padding: 5px 10px;\r\n  flex: 1;\r\n  text-align: left;\r\n}\r\n\r\n.nft-info-title a {\r\n  color: var(--primary) !important;\r\n  font-family: \"ChakraPetch\", Helvetica, Arial;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  line-height: 36px;\r\n  text-decoration: none;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  max-width: 110px;\r\n  display: block;\r\n}\r\n\r\n.nft-info-title a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.nft-info-button {\r\n  border: solid 2px var(--primary);\r\n  cursor: pointer;\r\n  height: 22px;\r\n  padding: 0px 5px;\r\n  margin-right: 5px;\r\n}\r\n.nft-info-button span {\r\n  color: var(--primary) !important;\r\n  font-family: \"ChakraPetch\", Helvetica, Arial;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n}\r\n.nft-info-button .edit-icon {\r\n  margin-left: 5px;\r\n}\r\n.nft-info-button .burn-icon {\r\n  margin-left: 5px;\r\n}\r\n.nft-subinfo-container {\r\n  text-align: left;\r\n  font-family: \"ChakraPetch\", Helvetica, Arial;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  line-height: 16px;\r\n  letter-spacing: 0em;\r\n  margin: 0px 10px;\r\n}\r\n.nft-subinfo-container p {\r\n  margin: 5px 0;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./OneNftComponent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./OneNftComponent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./OneNftComponent.vue?vue&type=template&id=0265c7c7&scoped=true&\"\nimport script from \"./OneNftComponent.vue?vue&type=script&lang=js&\"\nexport * from \"./OneNftComponent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./OneNftComponent.vue?vue&type=style&index=0&id=0265c7c7&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0265c7c7\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class='full-screen-popup'>\r\n    <message-modal name='nft-message-modal' :message='message'/>\r\n    <div class='full-screen-popup-fade' @click='$props.onClose'></div>\r\n    <div class=\"my-nft-wrapper\">\r\n      <div class='my-nft-header'>\r\n        My NFTs\r\n        <img :src=\"`${publicPath}icons/close.svg`\" alt=\"close\" class=\"close\" @click='$props.onClose'>\r\n      </div>\r\n      <div class='my-nft-container'>\r\n        <div v-for=\"nft in nfts\" v-bind:key=\"nft.id\" class='my-nft'>\r\n          <OneNftComponent :onError='onError' :address='nft.address' :id='nft.id' :lockedAmount='nft.lockedAmount' :x='nft.x' :y='nft.y' :width='nft.width' :height='nft.height' :description='nft.description' :url='nft.url' :onedit='onEdit' />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <claim-modal name='edit-modal' :id='editNftId' :width=\"editNftWidth\" :height=\"editNftHeight\" :x=\"editNftX\" :y=\"editNftY\" :onsuccess=\"onModalSuccess\" @close=\"closEditModal\"/>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nimport OneNftComponent from '@/components/OneNftComponent.vue'\r\nimport ClaimModal from \"@/components/ClaimModal.vue\";\r\nimport MessageModal from '@/components/MessageModal.vue'\r\n\r\nexport default {\r\n  name: 'MyNftComponent',\r\n  components: {\r\n    OneNftComponent,\r\n    ClaimModal,\r\n    MessageModal\r\n  },\r\n  data () {\r\n    return {\r\n      publicPath: process.env.BASE_URL,\r\n      editNftId: null,\r\n      editNftWidth: null,\r\n      editNftHeight: null,\r\n      editNftX: null,\r\n      editNftY: null,\r\n      message: \"\"\r\n    }\r\n  },\r\n  props: ['onClose'],\r\n  computed: {\r\n    address() {\r\n      return \"\";\r\n    },\r\n    nfts() {\r\n      return this.$store.state.Provider.userNfts\r\n    }\r\n  },\r\n  mounted(){\r\n  },\r\n  methods: {\r\n    onError(message) {\r\n      this.message = message;\r\n      this.$modal.show('nft-message-modal');\r\n    },\r\n    onEdit(id, x, y, width, height) {\r\n      this.editNftId = id;\r\n      this.editNftX = x;\r\n      this.editNftY = y;\r\n      this.editNftWidth = width;\r\n      this.editNftHeight = height;\r\n      this.$modal.show('edit-modal');\r\n    },\r\n    onModalSuccess() {\r\n      this.editNftId = null;\r\n      this.$modal.hide('edit-modal');\r\n      this.$props.onClose();\r\n    },\r\n    closEditModal() {\r\n      this.editNftId = null;\r\n      this.$modal.hide('edit-modal');\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.my-nft-wrapper {\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 92px;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 300px;\r\n  background: #7000FF;\r\n  z-index: 8;\r\n  color: #CCFF00;\r\n}\r\n.my-nft-header {\r\n  color: var(--primary);\r\n  font-family: \"ChakraPetch\", Helvetica, Arial;\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  height: 60px;\r\n  text-align: center;\r\n  width: 100%;\r\n  flex: 0;\r\n  padding-top: 5px;\r\n}\r\n.my-nft-container {\r\n  font-family: \"ChakraPetch\", Helvetica, Arial;\r\n  flex: 1;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: solid 8px #7000FF;\r\n  background: #21004B;\r\n  box-sizing: border-box;\r\n  overflow-y: scroll;\r\n}\r\n\r\n\r\n.my-nft {\r\n  padding: 10px;\r\n  width: 100%;\r\n  text-align: center;\r\n  box-sizing: border-box;\r\n}\r\n.close {\r\n  width: 24px;\r\n  height: 24px;\r\n  position: absolute;\r\n  right: 13px;\r\n  top: 8px;\r\n  cursor: pointer;\r\n}\r\n.full-screen-popup {\r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  top: 92px;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  z-index: 1000;\r\n}\r\n.full-screen-popup-fade {\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MyNftComponent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MyNftComponent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MyNftComponent.vue?vue&type=template&id=2a0d0b18&scoped=true&\"\nimport script from \"./MyNftComponent.vue?vue&type=script&lang=js&\"\nexport * from \"./MyNftComponent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MyNftComponent.vue?vue&type=style&index=0&id=2a0d0b18&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2a0d0b18\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <MyNftComponent v-if='myNftOpened' :onClose='closeMyNfts'/>\n    <HeaderComponent :openMyNfts='openMyNfts' :isEditingMode='isEditingMode' :toggleEditingMode='toggleEditingMode' />\n    <CanvasComponent :isEditingMode='isEditingMode' />\n    <div v-if='!isCollectionLoaded' class='loading-fullscreen'>\n      <div>\n        <h1>Loading collection</h1>\n        <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport HeaderComponent from './components/HeaderComponent.vue'\nimport CanvasComponent from './components/CanvasComponent.vue'\nimport MyNftComponent from \"@/components/MyNftComponent.vue\";\n\nexport default {\n  name: 'App',\n  components: {\n    HeaderComponent,\n    CanvasComponent,\n    MyNftComponent\n  },\n  data() {\n    return {\n      myNftOpened: false,\n      isEditingMode: false,\n      message: 'Its okay to be not okay'\n    }\n  },\n  computed: {\n    isCollectionLoaded() {\n      return this.$store.state.Provider.collectionLoaded;\n    }\n  },\n  mounted() {\n    this.$store.dispatch('Provider/init', {});\n  },\n  methods: {\n    closeMyNfts() {\n      this.myNftOpened = false;\n    },\n    openMyNfts() {\n      this.myNftOpened = true;\n    },\n    toggleEditingMode() {\n      this.isEditingMode = !this.isEditingMode;\n    },\n    showError(message) {\n      this.message = message;\n      this.$modal.show('message-modal');\n    }\n  }\n}\n</script>\n\n<style>\n@font-face {\n  font-family: \"ChakraPetch\";\n  src: local(\"ChakraPetch\"),\n   url(../public/fonts/ChakraPetch-Regular.ttf) format(\"truetype\");\n}\nhtml, body {\n  padding: 0;\n  margin: 0;\n  background-color: #3B0087;\n  box-sizing: border-box;\n}\n#app {\n  font-family: \"ChakraPetch\", Helvetica, Arial;\n}\n.loading-fullscreen {\n  z-index: 1000;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: #3B0087;\n  color: var(--primary);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  text-align: center;\n  align-items: center;\n}\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=352094e8&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=352094e8&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* eslint-disable */\nimport {VenomConnect} from \"venom-connect\";\nimport {Address, ProviderRpcClient} from \"everscale-inpage-provider\";\nimport { EverscaleStandaloneClient } from \"everscale-standalone-client\";\nimport CollectionAbi from \"./abi/SegmintCollection.abi.json\";\nimport NftAbi from \"./abi/SegmintNft.abi.json\";\nimport IndexAbi from \"./abi/Index.abi.json\";\n\nimport { covertTileColorToPixels, getWhitePixels } from '@/utils/pixels'\nimport {BN} from \"bn.js\";\nimport Vue from \"vue\";\n\nconst CollectionAddress = new Address(\"0:091ab4602f7a9d3c9055995d299aad89a7a4fc851cb995560b6a74492f14bc9d\");\n\nconst ColorifyOneTilePrice = 0.017;\n// wallet to collection 1, collection nft 0.5\nconst MaximumFwdFeeForBigMint = 0.15;\n// 1 for deploy nft, 1 create nft,\nconst OneNftMintingCost = 0.8;\n// Whole block, 1 for se, 0.2 for venom.\nconst MaximumClaimGasPrice = 0.15;\n\nconst BurnNftValue = 1.1;\nconst nftBanList = [];\n\nconst standaloneFallback = () =>\n  EverscaleStandaloneClient.create({\n    connection: {\n      id: 1000,\n      group: \"dev\",\n      type: \"jrpc\",\n      data: {\n        endpoint: \"https://jrpc-testnet.venom.foundation/\"\n      },\n    },\n  });\n\n\nasync function loadCollection(provider, commit) {\n  let collectionSubscriber;\n  try {\n    collectionSubscriber = new provider.Subscriber()\n    // Subscribe at first\n    const collectionContract = new provider.Contract(CollectionAbi, CollectionAddress);\n\n    // Is cached state loaded\n    let stateLoaded = false;\n\n    // We collect every new taken pixels & colorify nfts\n    // To be added after cached state is loaded.\n    let updatesToAddAfterStateIsLoaded = [];\n\n    collectionSubscriber.transactions(collectionContract.address).on(async (data) => {\n      console.log('We got a new transactions on collection address', data);\n      for (let tx of data.transactions.reverse()) {\n        let events = await collectionContract.decodeTransactionEvents({ transaction: tx });\n        for (let event of events) {\n          if (event.event === \"TileColorify\") {\n            let x = parseInt(event.data.pixelStartX);\n            let y = parseInt(event.data.pixelStartY);\n\n            let tile = {\n              index: (x / 10) * 100 + y / 10,\n              nftId: event.data.nftId,\n              epoch: event.data.nftEpoch,\n              x: x,\n              y: y,\n              pixels: covertTileColorToPixels(event.data.tileColors)\n            }\n            if (stateLoaded) {\n              commit('Provider/setTile', { tile: tile });\n            } else {\n              updatesToAddAfterStateIsLoaded.push({\n                type: 'Provider/setTile',\n                data: { tile: tile }\n              })\n            }\n          } else if (event.event === 'NftMinted') {\n            let x = parseInt(event.data.pixelStartX);\n            let y = parseInt(event.data.pixelStartY);\n\n            let endX = parseInt(event.data.pixelEndX);\n            let endY = parseInt(event.data.pixelEndY);\n\n            for (let tx = x / 10; tx < endX / 10; tx++) {\n              for (let ty = y / 10; ty < endY / 10; ty++) {\n                let tile = {\n                  index: tx * 100 + ty,\n                  nftId: event.data.nftId,\n                  epoch: event.data.nftEpoch,\n                  x: tx * 10,\n                  y: ty * 10,\n                  pixels: getWhitePixels()\n                }\n                if (stateLoaded) {\n                  commit('Provider/setTile', { tile: tile });\n                } else {\n                  updatesToAddAfterStateIsLoaded.push({\n                    type: 'Provider/setTile',\n                    data: { tile: tile }\n                  })\n                }\n              }\n            }\n          } else if (event.event === 'MintDisabledChanged') {\n            if (stateLoaded) {\n              commit('Provider/setMintDisabled', event.data.newValue);\n            } else {\n              updatesToAddAfterStateIsLoaded.push({\n                type: 'Provider/setMintDisabled',\n                data: event.data.newValue\n              })\n            }\n          } else if (event.event === 'EpochChanged') {\n            if (stateLoaded) {\n              commit('Provider/setEpoch', { epoch: event.data.newEpoch, price: event.data.oneTileClaimPrice });\n            } else {\n              updatesToAddAfterStateIsLoaded.push({\n                type: 'Provider/setEpoch',\n                data: { epoch: event.data.newEpoch, price: event.data.oneTileClaimPrice }\n              })\n            }\n          }\n        }\n      }\n    });\n\n    // to give time subscriber to subscribe\n    await new Promise(function(resolve, reject) {\n      setTimeout(resolve, 50);\n    })\n\n    let seconds = Date.now();\n    console.log('get new state');\n    const { state: collectionCachedState } = await collectionContract.getFullState();\n    console.log('state got', ((Date.now() - seconds)/1000).toFixed(1));\n\n    // load tiles\n    let tilesColorsByIndex = {};\n    let tilesByIndex = {};\n\n    let {fields: parsedState} = await collectionContract.getFields({cachedState: collectionCachedState});\n    console.log('state parsed', ((Date.now() - seconds)/1000).toFixed(1));\n\n\n    for (let elem of parsedState.tiles_) {\n      let blockchainIndex = new BN(elem[0]);\n      let x = parseInt(blockchainIndex.shrn(7).toString(10));\n      let y = parseInt(blockchainIndex.and(new BN('127', 10)).toString(10));\n\n      const index = x * 100 + y;\n      tilesColorsByIndex[index] = covertTileColorToPixels(elem[1]);\n    }\n\n    for (let elem of parsedState.tileOwner_) {\n      let blockchainIndex = new BN(elem[0]);\n      let nftIdEpochId = new BN(elem[1]);\n      let x = parseInt(blockchainIndex.shrn(7).toString(10));\n      let y = parseInt(blockchainIndex.and(new BN('127', 10)).toString(10));\n\n      let nftId = nftIdEpochId.shrn(32).toString(10);\n      let epoch = nftIdEpochId.and(new BN('4294967295', 10)).toString(10);\n\n      const index = x * 100 + y;\n      let tile = {\n        index: index,\n        nftId: nftId,\n        epoch: epoch,\n        x: x * 10,\n        y: y * 10,\n        pixels: nftBanList.indexOf(nftId) === -1 ? tilesColorsByIndex[index] || getWhitePixels() : getWhitePixels()\n      }\n      tilesByIndex[index] = tile;\n    }\n\n    for (let y = 0; y < 100; y++) {\n      for (let x = 0; x < 100; x++) {\n        let index = x * 100 + y;\n        if (!tilesByIndex[index]) {\n          const tile = {\n            index: index,\n            nftId: \"4294967295\",\n            epoch: 0,\n            x: x * 10,\n            y: y * 10,\n            pixels: Array(10 * 10 * 4).fill(0)\n          }\n          tilesByIndex[index] = tile;\n        }\n      }\n    }\n\n    commit('Provider/setEpoch', { epoch: parsedState.currentEpoch_, price: parsedState.currentEpochPixelTilePrice_ });\n    commit('Provider/setMintDisabled', parsedState.mintDisabled_);\n    commit('Provider/setCollection', { collectionContract, collectionCachedState, tilesByIndex, nftTvc: await provider.codeToTvc(parsedState._codeNft) });\n    stateLoaded = true;\n\n    // rollup pending events\n    for (let event of updatesToAddAfterStateIsLoaded) {\n      console.log('pending events');\n      commit(event.type, event.data);\n    }\n    console.log('Parsed', ((Date.now() - seconds)/1000).toFixed(1));\n  } catch (e) {\n    console.log('load collection error', e);\n    collectionSubscriber && collectionSubscriber.unsubscribe();\n    setTimeout(function() {\n      loadCollection(provider, commit);\n    }, 10000)\n  }\n}\n\nasync function fetchAccountBalance(address, provider, commit) {\n  provider.getBalance(address).then(function(balance) {\n    if (balance) {\n      commit('Provider/setAccountBalance', {address, balance: (balance / 1_000_000_000).toFixed(1)});\n    }\n  })\n}\n\nasync function fetchUserNft(id, nftTvc, userAddress, provider, commit) {\n  const {address: nftAddress} = await provider.getStateInit(NftAbi, {\n    workchain: 0,\n    tvc: nftTvc,\n    initParams: {\n      _id: id\n    }\n  })\n  const nftContract = new provider.Contract(NftAbi, nftAddress);\n  let nftInfo = await nftContract.methods.getNftCustomData({answerId:0}).call({responsible: true});\n  commit('setUserNft', {\n    userAddress: userAddress,\n    nft: {\n      address: nftAddress,\n      id: nftInfo.id,\n      owner: nftInfo.owner,\n      lockedAmount: nftInfo.lockedAmount,\n      description: nftInfo.description,\n      url: nftInfo.url,\n      x: parseInt(nftInfo.tilePixelsStartX),\n      y: parseInt(nftInfo.tilePixelsStartY),\n      width: parseInt(nftInfo.tilePixelsEndX) - parseInt(nftInfo.tilePixelsStartX),\n      height: parseInt(nftInfo.tilePixelsEndY) - parseInt(nftInfo.tilePixelsStartY)\n    }\n  })\n}\n\nasync function fetchUserNfts(userAddress, provider, nftTvc, collectionContract, collectionCachedState, commit) {\n  console.log('Fetch users nfts!!!');\n  const {codeHash: indexCodeHash} = await collectionContract.methods.getNftIndexCodeHash({answerId: 0, _owner: userAddress}).call({responsible: true, cachedState: collectionCachedState})\n  console.log('Got init code hash');\n  const {accounts: userNftsContracts} = await provider.getAccountsByCodeHash({codeHash: indexCodeHash});\n  console.log('Got accounts');\n\n  let nfts = [];\n  for (let indexAddress of userNftsContracts) {\n    console.log('Iterate', indexAddress);\n    try {\n      let contract = new provider.Contract(IndexAbi, indexAddress);\n      let {owner: ownerAddress, nft: nftAddress, collection: collectionAddress} = await contract.methods.getInfo({answerId: 0}).call({responsible: true});\n      const nftContract = new provider.Contract(NftAbi, nftAddress);\n      const {state: nftContractFullState} = await nftContract.getFullState();\n\n      if (nftContractFullState && nftContractFullState.isDeployed) {\n        let nftInfo = await nftContract.methods.getNftCustomData({answerId:0}).call({responsible: true, cachedState: nftContractFullState});\n        if (nftInfo.owner.equals(userAddress)  && nftInfo.collection.equals(collectionContract.address)) {\n          const {address: expectedNftAddress} = await provider.getStateInit(NftAbi, { workchain: 0, tvc: nftTvc, initParams: { _id: nftInfo.id } });\n          if (expectedNftAddress.equals(nftAddress)) {\n            commit('Provider/setUserNft', {\n              userAddress: userAddress,\n              nft: {\n                address: nftAddress,\n                id: nftInfo.id,\n                owner: nftInfo.owner,\n                lockedAmount: nftInfo.lockedAmount,\n                description: nftInfo.description,\n                url: nftInfo.url,\n                x: parseInt(nftInfo.tilePixelsStartX),\n                y: parseInt(nftInfo.tilePixelsStartY),\n                width: parseInt(nftInfo.tilePixelsEndX) - parseInt(nftInfo.tilePixelsStartX),\n                height: parseInt(nftInfo.tilePixelsEndY) - parseInt(nftInfo.tilePixelsStartY)\n              }\n            })\n          }\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n\nexport const Provider = {\n  namespaced: true,\n  state: {\n    venomConnect: null,\n    provider: null,\n    standaloneProvider: null,\n    account: null,\n    accountBalanceSubscriber: null,\n    venomBalance: '0',\n    userNftsLoadingStarted: false,\n    userNfts: [],\n    collectionContract: null,\n    collectionCachedState: null,\n    collectionLoaded: false,\n    nftTvc: undefined,\n    epoch: 0,\n    currentTilePrice: 0,\n    mintEnabled: true,\n    tilesByIndex: {},\n    nftDataById: {},\n  },\n  mutations: {\n    setVenomConnect(state, venomConnect) {\n      state.venomConnect = venomConnect;\n    },\n    setStandaloneProvider(state, provider) {\n      state.standaloneProvider = provider;\n      loadCollection(provider, this.commit);\n    },\n    setProvider(state, provider) {\n      console.log('setProvider', provider);\n      state.provider = provider;\n      state.provider.subscribe('networkChanged').then((subscriber) => {\n        subscriber.on('data', (event) => {\n          // reinit tiles on network changed.\n          const currentProviderState = provider?.getProviderState().then((currentProviderState) => {\n            if (currentProviderState?.permissions?.basic && currentProviderState?.permissions?.accountInteraction) {\n              // To reload balance and token balance\n              this.commit('Provider/setConnectedAccount', currentProviderState?.permissions?.accountInteraction.address);\n            }\n          })\n        });\n      })\n    },\n    setCollection(state, {collectionContract, collectionCachedState, tilesByIndex, nftTvc}) {\n      console.log('setCollection');\n      state.collectionContract = collectionContract;\n      state.collectionCachedState = collectionCachedState;\n      state.tilesByIndex = tilesByIndex;\n      state.nftTvc = nftTvc\n      state.collectionLoaded = true;\n      if (!state.userNftsLoadingStarted && state.account) {\n        state.userNftsLoadingStarted = true;\n        fetchUserNfts(state.account, state.standaloneProvider, state.nftTvc, state.collectionContract, state.collectionCachedState, this.commit);\n      }\n      state.account && fetchAccountBalance(state.account, state.provider, this.commit);\n    },\n    setTile(state, { tile }) {\n      if (nftBanList.indexOf(tile.nftId) !== -1)\n        return;\n      state.tilesByIndex[tile.index] = tile;\n      delete state.nftDataById[tile.nftId]\n    },\n    nftMinted(state, {owner, id}) {\n      if (state.account && state.account.equals(owner)) {\n        fetchUserNft(id, state.nftTvc, owner, state.provider, this.commit);\n      }\n    },\n    setConnectedAccount(state, address) {\n      console.log('setConnectedAccount');\n      state.account = address;\n      state.venomBalance = '0';\n      state.userNfts = [];\n\n      state.accountBalanceSubscriber && clearInterval(state.accountBalanceSubscriber);\n      address && fetchAccountBalance(address, state.provider, this.commit);\n      address && (state.accountBalanceSubscriber = setInterval(() => {\n        fetchAccountBalance(address, state.provider, this.commit)\n      }, 15 *1000));\n      if (address && state.collectionCachedState) {\n        state.userNftsLoadingStarted = true;\n        fetchUserNfts(address, state.standaloneProvider, state.collectionContract, state.collectionCachedState, this.commit);\n      } else {\n        state.userNftsLoadingStarted = false;\n      }\n    },\n    setAccountBalance(state, {address, balance}) {\n      if (state.account.toString() === address.toString()) {\n        state.venomBalance = balance;\n      }\n    },\n    setNftDataLoadingInProgress(state, nftId) {\n      let nftDataById = state.nftDataById;\n      if (!nftDataById[nftId]) {\n        nftDataById[nftId] = {\n          loading: true,\n          url: '',\n          description: ''\n        }\n        state.nftDataById = nftDataById;\n      }\n    },\n    setUserNft(state, {userAddress, nft}) {\n      if (state.account && state.account.equals(userAddress) && !state.userNfts.find(n => n.id === nft.id)) {\n        let nfts = state.userNfts.slice();\n        nfts.push(nft);\n        state.userNfts = nfts;\n      }\n    },\n    removeUserNft(state, id) {\n      state.userNfts = state.userNfts.filter(nft => nft.id !== id);\n    },\n    setMintDisabled(state, newValue) {\n      state.mintDisabled = newValue;\n    },\n    setEpoch(state, {epoch, price}) {\n      state.currentTilePrice = price;\n      state.epoch = epoch;\n    },\n    setNftData(state, {id, description, url}) {\n      // TODO think how to make better to trigger update\n      let mapping = Object.assign({}, state.nftDataById) ;\n      // TODO validate url\n      mapping[id] = {description: description.slice(0, 2000), url: url.slice(0, 2000)};\n      state.nftDataById = mapping;\n    }\n  },\n  getters: {\n    getNftDescriptionById: (state) => (id) => {\n      let mapping = state.nftDataById;\n      let nft = mapping[id];\n      if (nft)\n        return nft.description\n      return '';\n    }\n  },\n  actions:  {\n    init({ state, commit }) {\n      if (state.venomConnect)\n        return;\n      const venomConnect = new VenomConnect({\n        theme: 'light',\n        checkNetworkId: 1000, //  1000 - venom testnet\n        providersOptions: {\n          venomwallet: {\n            links: {},\n            walletWaysToConnect: [\n              {\n                // NPM package everscale inpage provider\n                package: ProviderRpcClient,\n                packageOptions: {\n                  fallback:\n                    VenomConnect.getPromise(\"venomwallet\", \"extension\") || (() => Promise.reject()),\n                  forceUseFallback: true,\n                },\n                packageOptionsStandalone: {\n                  fallback: standaloneFallback,\n                  forceUseFallback: true,\n                },\n                // Setup\n                id: \"extension\",\n                type: \"extension\",\n              },\n            ],\n            defaultWalletWaysToConnect: [\n              // List of enabled options\n              \"mobile\",\n              \"ios\",\n              \"android\",\n            ],\n          },\n          // everwallet: {\n          //   links: {},\n          //   walletWaysToConnect: [\n          //     {\n          //       // NPM package\n          //       package: ProviderRpcClient,\n          //       packageOptions: {\n          //         fallback:\n          //           VenomConnect.getPromise(\"everwallet\", \"extension\") ||\n          //           (() => Promise.reject()),\n          //         forceUseFallback: true,\n          //       },\n          //       packageOptionsStandalone: {\n          //         fallback: standaloneFallback,\n          //         forceUseFallback: true,\n          //       },\n          //       id: \"extension\",\n          //       type: \"extension\",\n          //     },\n          //   ],\n          //   defaultWalletWaysToConnect: [\n          //     // List of enabled options\n          //     \"mobile\",\n          //     \"ios\",\n          //     \"android\",\n          //   ],\n          // },\n        },\n      });\n      commit('setVenomConnect', venomConnect);\n      // Get standalone provider or  already connected wallet\n      venomConnect.checkAuth().then(async (provider) => {\n        await provider?.ensureInitialized();\n        const currentProviderState = await provider?.getProviderState();\n        let standAloneProvider = await venomConnect.getStandalone();\n        commit('setStandaloneProvider', standAloneProvider);\n        if (currentProviderState?.permissions?.basic && currentProviderState?.permissions?.accountInteraction) {\n          console.log('We connected');\n          commit('setProvider', provider);\n          commit('setConnectedAccount', currentProviderState?.permissions?.accountInteraction?.address);\n        }\n      });\n\n      venomConnect.on('extension-auth', async function (provider) {\n        const currentProviderState = await provider?.getProviderState();\n        commit('setProvider', provider);\n        if (currentProviderState?.permissions?.accountInteraction?.address) {\n          commit('setConnectedAccount', currentProviderState?.permissions?.accountInteraction?.address);\n        }\n      });\n    },\n    connect({state, commit}) {\n      state.venomConnect.connect();\n    },\n    disconnect({state, commit}) {\n      state.provider.disconnect();\n      commit('setConnectedAccount', null);\n    },\n    claimTiles({state, commit}, {x, y, width, height, tiles, description, url}) {\n      if (state.account === null) {\n        // connect first\n        state.venomConnect.connect();\n        return;\n      }\n\n      let collection = new state.provider.Contract(CollectionAbi, CollectionAddress);\n      const promise = collection.methods.claimTiles({\n        \"pixelStartX\": x,\n        \"pixelStartY\": y,\n        \"pixelEndX\": x + width,\n        \"pixelEndY\": y + height,\n        \"tilesToColorify\": tiles,\n        \"description\": description || '',\n        \"url\": url || '',\n        \"coinsToRedrawOneTile\" : Math.floor(ColorifyOneTilePrice * 1_000_000_000).toString()\n      }).send({\n        from: state.account,\n        amount: Math.floor( width * height / 100 * parseInt(state.currentTilePrice) + (width * height / 100 * ColorifyOneTilePrice + MaximumFwdFeeForBigMint + OneNftMintingCost + MaximumClaimGasPrice) * 1_000_000_000).toString(),\n      }).then(firstTx => {\n        return new Promise(async (resolve, reject) => {\n          let nftMinted = false;\n          let txs = [];\n          const subscriber = new state.provider.Subscriber();\n          await subscriber.trace(firstTx).tap(tx_in_tree => {\n            if (tx_in_tree.account.equals(CollectionAddress)) {\n              txs.push(tx_in_tree);\n            }\n          }).finished();\n          for (let tx of txs) {\n            let events = await state.collectionContract.decodeTransactionEvents({ transaction: tx });\n            for (let event of events) {\n                if (event.event === 'NftMinted') {\n                  nftMinted = true;\n                  fetchUserNft(event.data.nftId, state.nftTvc, event.data.owner, state.provider, commit);\n                }\n            }\n          }\n          if (nftMinted) {\n            resolve();\n          } else {\n            reject(new Error('Nft not minted :-(. Price changed or space occupied.'));\n          }\n        })\n      })\n      return promise;\n    },\n    redrawNft({state, commit}, {id, x, y, width, height, tiles, description, url}) {\n      let collection = new state.provider.Contract(CollectionAbi, CollectionAddress);\n      return collection.methods.nftAddress({answerId: 0, id: id}).call({responsible: true, cachedState: state.collectionCachedState}).then(function(answer) {\n        const nftContract = new state.provider.Contract(NftAbi, answer.nft);\n        return nftContract.methods.colorify({\n          \"tilesToColorify\": tiles,\n          \"description\": description || '',\n          \"url\": url || '',\n          \"sendGasBack\": state.account,\n          \"coinsToRedrawOneTile\" : (ColorifyOneTilePrice * 1_000_000_000).toString()\n        }).send({\n          from: state.account,\n          amount: (Math.floor(width * height / 100 * ColorifyOneTilePrice * 1_000_000_000) + 1_000_000_000).toString(),\n        }).then(function(firstTx) {\n          return new Promise(async(resolve, reject) => {\n            const subscriber = new state.provider.Subscriber();\n            await subscriber.trace(firstTx).tap(tx_in_tree => {\n              // nothing\n            }).finished();\n            resolve();\n          })\n        })\n      })\n    },\n    burnNft({state, commit}, id) {\n      return state.provider.getStateInit(NftAbi, {\n        workchain: 0,\n        tvc: state.nftTvc,\n        initParams: {\n          _id: id\n        }\n      }).then(function(data) {\n        let nftContract = new state.provider.Contract(NftAbi, data.address);\n        return nftContract.methods.burnNft({}).send({\n          from: state.account,\n          amount: (BurnNftValue * 1_000_000_000).toString(),\n        }).then(function(firstTx) {\n          commit('removeUserNft', id);\n        })\n      })\n    },\n    fetchNftData({state, commit}, {id}) {\n      if (nftBanList.indexOf(id) !== -1) {\n        return;\n      }\n      if (!state.nftDataById[id] && state.standaloneProvider && state.collectionCachedState) {\n        commit('setNftDataLoadingInProgress', id);\n        state.standaloneProvider.getStateInit(NftAbi, {\n          workchain: 0,\n          tvc: state.nftTvc,\n          initParams: {\n            _id: id\n          }\n        }).then(function(data) {\n          let nftContract = new state.standaloneProvider.Contract(NftAbi, data.address);\n          return nftContract.methods.getNftCustomData({\n            answerId: 0\n          }).call({\n            responsible: true\n          })\n        }).then(nftAnswer => {\n          commit('setNftData', {id, description: nftAnswer.description, url: nftAnswer.url})\n        })\n      }\n    }\n  },\n}\n","import Vue from 'vue'\nimport Vuex from 'vuex'\nimport {Provider} from \"@/store/modules/Provider\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {},\n  mutations: {},\n  actions: {},\n  modules: {\n    Provider\n  }\n})\n","import Vue from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport vmodal from 'vue-js-modal'\nimport \"./styles/main.css\"\n\nVue.use(vmodal)\nVue.config.productionTip = false\n\nnew Vue({\n  store,\n  render: h => h(App),\n}).$mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = function(module) {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: function() {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/frontend/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksegmint_frontend\"] = self[\"webpackChunksegmint_frontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1974); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","attrs","myNftOpened","closeMyNfts","_e","openMyNfts","isEditingMode","toggleEditingMode","isCollectionLoaded","staticClass","_m","staticRenderFns","_v","publicPath","on","$props","_s","$store","state","Provider","account","epoch","pixelPrice","address","balance","disconnect","connect","name","data","process","props","computed","str","_address","slice","venomBalance","parseInt","currentTilePrice","toString","methods","dispatch","component","errorMessage","selectedWidth","selectedHeight","selectionStartX","selectionStartY","onClaimModalSuccess","onClaimModalError","closeClaimModal","click","onMouseUp","onMouseLeave","onMouseDown","onMouseMove","ref","style","oldCanvasStyles","highLightPopupStyles","highlightNftDescription","selectionHeaderStyle","selectionStyles","_l","badTiles","tile","key","index","styleForBadTile","selectionInProcess","claim","beforeClose","beforeOpen","headerText","$event","$emit","claimInProgress","staticStyle","canBeClaimed","width","height","onChange","directives","rawName","value","expression","canvasContainerStyles","class","selected","resizeMode","setResizeMode","description","domProps","target","composing","link","inputLink","linkValid","id","mintingPrice","WhiteTile","Array","fill","getWhitePixels","covertTileColorToPixels","colors","pixels","y","r","BN","g","b","x","push","shrn","and","toNumber","encodePixelsToTileColor","tileColor","shln","or","image","coloredTiles","length","margin","toFixed","mode","redraw","ctx","$refs","canvas","getContext","imageSmoothingEnabled","fillStyle","fillRect","tiles","blitz","Blitz","params","source","maxWidth","maxHeight","minWidth","minHeight","proportional","output","quality","aspectRatio","canvasAspectRatio","Math","floor","then","img","drawWidth","drawHeight","drawImage","tileY","tileX","getImageData","Image","onload","bind","src","URL","createObjectURL","file","files","event","preventDefault","url","urlPattern","test","promise","onsuccess","catch","err","console","log","code","onerror","message","cancel","close","$modal","hide","components","ClaimModal","MessageModal","ctxOld","imageData","isMobile","collectionLoaded","selectionEndX","selectionEndY","highLightNftId","lastMousePosX","lastMousePosY","selectionTriedCounter","hideOldCanvas","visibility","opacity","transition","sX","sY","endX","endY","badSelectedTiles","tileInStore","tilesByIndex","nftId","selectedTilesCount","selectedPriceUSD","left","top","display","mapping","nftDataById","nft","position","backgroundColor","borderRadius","textAlign","mounted","canvasOld","createImageData","subscribe","mutation","type","payload","drawTile","clearSelection","set","putImageData","clearRect","setTimeout","canvasRect","getBoundingClientRect","xPos","clientX","yPos","clientY","coordX","coordY","max","newTilesCount","window","open","prevState","min","random","notEmptyTilesInSelection","filter","t","show","onClose","nfts","onError","lockedAmount","onEdit","editNftId","editNftWidth","editNftHeight","editNftX","editNftY","onModalSuccess","closEditModal","canvasStyles","scanLink","edit","burn","visiblyText","beautyValue","isFullyVisible","isPartialVisible","fullyVisible","onedit","floorPrice","OneNftComponent","userNfts","HeaderComponent","CanvasComponent","MyNftComponent","showError","CollectionAddress","Address","ColorifyOneTilePrice","MaximumFwdFeeForBigMint","OneNftMintingCost","MaximumClaimGasPrice","BurnNftValue","nftBanList","standaloneFallback","EverscaleStandaloneClient","connection","group","endpoint","async","loadCollection","provider","commit","collectionSubscriber","Subscriber","collectionContract","Contract","CollectionAbi","stateLoaded","updatesToAddAfterStateIsLoaded","transactions","tx","reverse","events","decodeTransactionEvents","transaction","pixelStartX","pixelStartY","nftEpoch","tileColors","pixelEndX","pixelEndY","ty","newValue","newEpoch","price","oneTileClaimPrice","Promise","resolve","reject","seconds","Date","now","collectionCachedState","getFullState","tilesColorsByIndex","fields","parsedState","getFields","cachedState","elem","tiles_","blockchainIndex","tileOwner_","nftIdEpochId","indexOf","currentEpoch_","currentEpochPixelTilePrice_","mintDisabled_","nftTvc","codeToTvc","_codeNft","e","unsubscribe","fetchAccountBalance","getBalance","fetchUserNft","userAddress","nftAddress","getStateInit","NftAbi","workchain","tvc","initParams","_id","nftContract","nftInfo","getNftCustomData","answerId","call","responsible","owner","tilePixelsStartX","tilePixelsStartY","tilePixelsEndX","tilePixelsEndY","fetchUserNfts","codeHash","indexCodeHash","getNftIndexCodeHash","_owner","accounts","userNftsContracts","getAccountsByCodeHash","indexAddress","contract","IndexAbi","ownerAddress","collection","collectionAddress","getInfo","nftContractFullState","isDeployed","equals","expectedNftAddress","namespaced","venomConnect","standaloneProvider","accountBalanceSubscriber","userNftsLoadingStarted","undefined","mintEnabled","mutations","setVenomConnect","setStandaloneProvider","setProvider","subscriber","getProviderState","currentProviderState","permissions","basic","accountInteraction","setCollection","setTile","nftMinted","setConnectedAccount","clearInterval","setInterval","setAccountBalance","setNftDataLoadingInProgress","loading","setUserNft","find","n","removeUserNft","setMintDisabled","mintDisabled","setEpoch","setNftData","Object","assign","getters","getNftDescriptionById","actions","init","VenomConnect","theme","checkNetworkId","providersOptions","venomwallet","links","walletWaysToConnect","package","ProviderRpcClient","packageOptions","fallback","forceUseFallback","packageOptionsStandalone","defaultWalletWaysToConnect","checkAuth","ensureInitialized","standAloneProvider","getStandalone","claimTiles","send","from","amount","firstTx","txs","trace","tap","tx_in_tree","finished","Error","redrawNft","answer","colorify","burnNft","fetchNftData","nftAnswer","Vue","Vuex","modules","vmodal","store","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","globalThis","Function","hmd","create","children","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","document","baseURI","self","location","href","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","forEach","__webpack_exports__"],"sourceRoot":""}